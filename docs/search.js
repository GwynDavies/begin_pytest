window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"lmc": {"fullname": "lmc", "modulename": "lmc", "kind": "module", "doc": "<p></p>\n"}, "lmc.application": {"fullname": "lmc.application", "modulename": "lmc.application", "kind": "module", "doc": "<p>Application errors and warnings</p>\n"}, "lmc.application.error_fatal": {"fullname": "lmc.application.error_fatal", "modulename": "lmc.application.error_fatal", "kind": "module", "doc": "<p></p>\n"}, "lmc.application.error_fatal.ErrorFatal": {"fullname": "lmc.application.error_fatal.ErrorFatal", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal", "kind": "class", "doc": "<p>For generating fatal errors when running the assembler or computer.</p>\n\n<p>Generates the error message, and exits execution, returning to the operating system</p>\n"}, "lmc.application.error_fatal.ErrorFatal.__init__": {"fullname": "lmc.application.error_fatal.ErrorFatal.__init__", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"fullname": "lmc.application.error_fatal.ErrorFatal.exit_fatal_error", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal.exit_fatal_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">error_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"fullname": "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal.exit_fatal_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">error_messages</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"fullname": "lmc.application.error_fatal.ErrorFatal.exit_file_not_found", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal.exit_file_not_found", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"fullname": "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty", "modulename": "lmc.application.error_fatal", "qualname": "ErrorFatal.exit_file_is_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.application.error_warn": {"fullname": "lmc.application.error_warn", "modulename": "lmc.application.error_warn", "kind": "module", "doc": "<p></p>\n"}, "lmc.application.error_warn.ErrorWarn": {"fullname": "lmc.application.error_warn.ErrorWarn", "modulename": "lmc.application.error_warn", "qualname": "ErrorWarn", "kind": "class", "doc": "<p>For generating warnings to the user, when running the assembler or computer.</p>\n"}, "lmc.application.error_warn.ErrorWarn.__init__": {"fullname": "lmc.application.error_warn.ErrorWarn.__init__", "modulename": "lmc.application.error_warn", "qualname": "ErrorWarn.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.application.error_warn.ErrorWarn.warn_error": {"fullname": "lmc.application.error_warn.ErrorWarn.warn_error", "modulename": "lmc.application.error_warn", "qualname": "ErrorWarn.warn_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">error_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"fullname": "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float", "modulename": "lmc.application.error_warn", "qualname": "ErrorWarn.warn_input_not_integer_or_float", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler": {"fullname": "lmc.assembler", "modulename": "lmc.assembler", "kind": "module", "doc": "<p>Converts a source_program file, into an executable file</p>\n"}, "lmc.assembler.assembler": {"fullname": "lmc.assembler.assembler", "modulename": "lmc.assembler.assembler", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.assembler.Assembler": {"fullname": "lmc.assembler.assembler.Assembler", "modulename": "lmc.assembler.assembler", "qualname": "Assembler", "kind": "class", "doc": "<p>Two pass assembler for \"Little man Computer\" assembly language:</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Little_man_computer\">https://en.wikipedia.org/wiki/Little_man_computer</a></p>\n\n<p>Converts a file containing a source program, into first an internal program that\ncould be executed.</p>\n\n<p>It does this in 2 passes.</p>\n\n<p>The first pass converts the source program file into a source program, and a symbol table.</p>\n\n<p>The second pass converts the source program into an internal program, using the symbol\ntable to do this.</p>\n\n<p>It then saves the internal program as an executable program file - which can be\nexecuted later.</p>\n"}, "lmc.assembler.assembler.Assembler.__init__": {"fullname": "lmc.assembler.assembler.Assembler.__init__", "modulename": "lmc.assembler.assembler", "qualname": "Assembler.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.assembler.assembler.Assembler.run": {"fullname": "lmc.assembler.assembler.Assembler.run", "modulename": "lmc.assembler.assembler", "qualname": "Assembler.run", "kind": "function", "doc": "<p>Run the assembler to convert the source program file, into an internal program.</p>\n\n<p>This internal program then gets saved as an executable program file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source_program_file_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.label": {"fullname": "lmc.assembler.label", "modulename": "lmc.assembler.label", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.label.Label": {"fullname": "lmc.assembler.label.Label", "modulename": "lmc.assembler.label", "qualname": "Label", "kind": "class", "doc": "<p></p>\n"}, "lmc.assembler.label.Label.__init__": {"fullname": "lmc.assembler.label.Label.__init__", "modulename": "lmc.assembler.label", "qualname": "Label.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.assembler.label.Label.is_label": {"fullname": "lmc.assembler.label.Label.is_label", "modulename": "lmc.assembler.label", "qualname": "Label.is_label", "kind": "function", "doc": "<p>If the token is not a mnemonic, then we are considering it a label</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser": {"fullname": "lmc.assembler.parser", "modulename": "lmc.assembler.parser", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.parser.Parser": {"fullname": "lmc.assembler.parser.Parser", "modulename": "lmc.assembler.parser", "qualname": "Parser", "kind": "class", "doc": "<p></p>\n"}, "lmc.assembler.parser.Parser.__init__": {"fullname": "lmc.assembler.parser.Parser.__init__", "modulename": "lmc.assembler.parser", "qualname": "Parser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.assembler.parser.Parser.get_symbol_table": {"fullname": "lmc.assembler.parser.Parser.get_symbol_table", "modulename": "lmc.assembler.parser", "qualname": "Parser.get_symbol_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser.Parser.get_source_instructions": {"fullname": "lmc.assembler.parser.Parser.get_source_instructions", "modulename": "lmc.assembler.parser", "qualname": "Parser.get_source_instructions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser.Parser.parse_source_instruction": {"fullname": "lmc.assembler.parser.Parser.parse_source_instruction", "modulename": "lmc.assembler.parser", "qualname": "Parser.parse_source_instruction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source_line</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"fullname": "lmc.assembler.parser.Parser.parse_mnemonic_no_label", "modulename": "lmc.assembler.parser", "qualname": "Parser.parse_mnemonic_no_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"fullname": "lmc.assembler.parser.Parser.parse_mnemonic_with_label", "modulename": "lmc.assembler.parser", "qualname": "Parser.parse_mnemonic_with_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"fullname": "lmc.assembler.parser.Parser.parse_mnemonic_dat", "modulename": "lmc.assembler.parser", "qualname": "Parser.parse_mnemonic_dat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.pass_one": {"fullname": "lmc.assembler.pass_one", "modulename": "lmc.assembler.pass_one", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.pass_one.PassOne": {"fullname": "lmc.assembler.pass_one.PassOne", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne", "kind": "class", "doc": "<p>First pass of the assembler, converts a source program file, into a source program</p>\n"}, "lmc.assembler.pass_one.PassOne.__init__": {"fullname": "lmc.assembler.pass_one.PassOne.__init__", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"fullname": "lmc.assembler.pass_one.PassOne.decode_source_program_file", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne.decode_source_program_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source_program_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.pass_one.PassOne.get_source_program": {"fullname": "lmc.assembler.pass_one.PassOne.get_source_program", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne.get_source_program", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_program</span><span class=\"o\">.</span><span class=\"n\">SourceProgram</span>:</span></span>", "funcdef": "def"}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"fullname": "lmc.assembler.pass_one.PassOne.get_symbol_table", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne.get_symbol_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">assembler</span><span class=\"o\">.</span><span class=\"n\">symbol_table</span><span class=\"o\">.</span><span class=\"n\">SymbolTable</span>:</span></span>", "funcdef": "def"}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"fullname": "lmc.assembler.pass_one.PassOne.decode_source_line", "modulename": "lmc.assembler.pass_one", "qualname": "PassOne.decode_source_line", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.assembler.pass_two": {"fullname": "lmc.assembler.pass_two", "modulename": "lmc.assembler.pass_two", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.pass_two.PassTwo": {"fullname": "lmc.assembler.pass_two.PassTwo", "modulename": "lmc.assembler.pass_two", "qualname": "PassTwo", "kind": "class", "doc": "<p></p>\n"}, "lmc.assembler.pass_two.PassTwo.__init__": {"fullname": "lmc.assembler.pass_two.PassTwo.__init__", "modulename": "lmc.assembler.pass_two", "qualname": "PassTwo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"fullname": "lmc.assembler.pass_two.PassTwo.assemble_source_instructions", "modulename": "lmc.assembler.pass_two", "qualname": "PassTwo.assemble_source_instructions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">symbol_table</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">assembler</span><span class=\"o\">.</span><span class=\"n\">symbol_table</span><span class=\"o\">.</span><span class=\"n\">SymbolTable</span>,</span><span class=\"param\">\t<span class=\"n\">source_program</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_program</span><span class=\"o\">.</span><span class=\"n\">SourceProgram</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">memory_image</span><span class=\"o\">.</span><span class=\"n\">MemoryImage</span>:</span></span>", "funcdef": "def"}, "lmc.assembler.symbol_table": {"fullname": "lmc.assembler.symbol_table", "modulename": "lmc.assembler.symbol_table", "kind": "module", "doc": "<p></p>\n"}, "lmc.assembler.symbol_table.SymbolTable": {"fullname": "lmc.assembler.symbol_table.SymbolTable", "modulename": "lmc.assembler.symbol_table", "qualname": "SymbolTable", "kind": "class", "doc": "<p></p>\n"}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"fullname": "lmc.assembler.symbol_table.SymbolTable.__init__", "modulename": "lmc.assembler.symbol_table", "qualname": "SymbolTable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.computer": {"fullname": "lmc.computer", "modulename": "lmc.computer", "kind": "module", "doc": "<p>Loads an executable file as a 'binary program' which the computer can execute - and executes it.</p>\n"}, "lmc.computer.computer": {"fullname": "lmc.computer.computer", "modulename": "lmc.computer.computer", "kind": "module", "doc": "<p></p>\n"}, "lmc.computer.computer.Computer": {"fullname": "lmc.computer.computer.Computer", "modulename": "lmc.computer.computer", "qualname": "Computer", "kind": "class", "doc": "<p>Emulate a computer, that can load and run an executable program file.</p>\n"}, "lmc.computer.computer.Computer.__init__": {"fullname": "lmc.computer.computer.Computer.__init__", "modulename": "lmc.computer.computer", "qualname": "Computer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.computer.computer.Computer.get_processor": {"fullname": "lmc.computer.computer.Computer.get_processor", "modulename": "lmc.computer.computer", "qualname": "Computer.get_processor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.computer.computer.Computer.run": {"fullname": "lmc.computer.computer.Computer.run", "modulename": "lmc.computer.computer", "qualname": "Computer.run", "kind": "function", "doc": "<p>Load an executable program file into the computer memory, and run it with\nthe computer processor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">executable_program_file_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.computer.integer_opcode": {"fullname": "lmc.computer.integer_opcode", "modulename": "lmc.computer.integer_opcode", "kind": "module", "doc": "<p></p>\n"}, "lmc.computer.integer_opcode.IntegerOpcode": {"fullname": "lmc.computer.integer_opcode.IntegerOpcode", "modulename": "lmc.computer.integer_opcode", "qualname": "IntegerOpcode", "kind": "class", "doc": "<p></p>\n"}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"fullname": "lmc.computer.integer_opcode.IntegerOpcode.__init__", "modulename": "lmc.computer.integer_opcode", "qualname": "IntegerOpcode.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"fullname": "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction", "modulename": "lmc.computer.integer_opcode", "qualname": "IntegerOpcode.convert_to_instruction", "kind": "function", "doc": "<p>For decoding an integer opcode, into a computer instruction</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">opcode</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Instruction</span>:</span></span>", "funcdef": "def"}, "lmc.computer.loader": {"fullname": "lmc.computer.loader", "modulename": "lmc.computer.loader", "kind": "module", "doc": "<p></p>\n"}, "lmc.computer.loader.Loader": {"fullname": "lmc.computer.loader.Loader", "modulename": "lmc.computer.loader", "qualname": "Loader", "kind": "class", "doc": "<p></p>\n"}, "lmc.computer.loader.Loader.__init__": {"fullname": "lmc.computer.loader.Loader.__init__", "modulename": "lmc.computer.loader", "qualname": "Loader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.computer.loader.Loader.load_into_memory": {"fullname": "lmc.computer.loader.Loader.load_into_memory", "modulename": "lmc.computer.loader", "qualname": "Loader.load_into_memory", "kind": "function", "doc": "<p>Load an executable program into the computer memory, so it can be executed.</p>\n\n<p>To do this, we get the opcode from each of the executable program's instructions.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">memory_image</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">memory_image</span><span class=\"o\">.</span><span class=\"n\">MemoryImage</span>,</span><span class=\"param\">\t<span class=\"n\">memory</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">Memory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.computer.memory_image": {"fullname": "lmc.computer.memory_image", "modulename": "lmc.computer.memory_image", "kind": "module", "doc": "<p></p>\n"}, "lmc.computer.memory_image.MemoryImage": {"fullname": "lmc.computer.memory_image.MemoryImage", "modulename": "lmc.computer.memory_image", "qualname": "MemoryImage", "kind": "class", "doc": "<p>Image of a program that resides in computer memory, contains opcodes the computer can execute.</p>\n\n<p>These opcodes are represented as integer numbers.</p>\n"}, "lmc.computer.memory_image.MemoryImage.__init__": {"fullname": "lmc.computer.memory_image.MemoryImage.__init__", "modulename": "lmc.computer.memory_image", "qualname": "MemoryImage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"fullname": "lmc.computer.memory_image.MemoryImage.get_max_size", "modulename": "lmc.computer.memory_image", "qualname": "MemoryImage.get_max_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.computer.memory_image.MemoryImage.append": {"fullname": "lmc.computer.memory_image.MemoryImage.append", "modulename": "lmc.computer.memory_image", "qualname": "MemoryImage.append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">opcode</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware": {"fullname": "lmc.hardware", "modulename": "lmc.hardware", "kind": "module", "doc": "<p>The virtual representations, of the little man computer hardware</p>\n\n<p>The processor will execute instructions in the memory, using the program counter and accumulator</p>\n\n<p>It will also interface with the user through an input buffer and an output buffer</p>\n"}, "lmc.hardware.accumulator": {"fullname": "lmc.hardware.accumulator", "modulename": "lmc.hardware.accumulator", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.accumulator.Accumulator": {"fullname": "lmc.hardware.accumulator.Accumulator", "modulename": "lmc.hardware.accumulator", "qualname": "Accumulator", "kind": "class", "doc": "<p>Holds values for calculations</p>\n"}, "lmc.hardware.accumulator.Accumulator.__init__": {"fullname": "lmc.hardware.accumulator.Accumulator.__init__", "modulename": "lmc.hardware.accumulator", "qualname": "Accumulator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.accumulator.Accumulator.get_value": {"fullname": "lmc.hardware.accumulator.Accumulator.get_value", "modulename": "lmc.hardware.accumulator", "qualname": "Accumulator.get_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.accumulator.Accumulator.set_value": {"fullname": "lmc.hardware.accumulator.Accumulator.set_value", "modulename": "lmc.hardware.accumulator", "qualname": "Accumulator.set_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.inp_buffer": {"fullname": "lmc.hardware.inp_buffer", "modulename": "lmc.hardware.inp_buffer", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.inp_buffer.InpBuffer": {"fullname": "lmc.hardware.inp_buffer.InpBuffer", "modulename": "lmc.hardware.inp_buffer", "qualname": "InpBuffer", "kind": "class", "doc": "<p>Performs and controls input from the user to the computer</p>\n\n<p>Test values can be set from a given file. This file is supplied by the constructor\nor by a 'setter' method</p>\n"}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"fullname": "lmc.hardware.inp_buffer.InpBuffer.__init__", "modulename": "lmc.hardware.inp_buffer", "qualname": "InpBuffer.__init__", "kind": "function", "doc": "<p>Set file_to_read_From, if you want to take input from a file, else it will be got from the user</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_to_read_from</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"fullname": "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from", "modulename": "lmc.hardware.inp_buffer", "qualname": "InpBuffer.set_file_to_read_from", "kind": "function", "doc": "<p>Set a file to load test values from, these will be used in place of prompting the user</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_to_read_from</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"fullname": "lmc.hardware.inp_buffer.InpBuffer.get_value", "modulename": "lmc.hardware.inp_buffer", "qualname": "InpBuffer.get_value", "kind": "function", "doc": "<p>If we have test values then use one of them, else get the value from the user</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction": {"fullname": "lmc.hardware.instruction", "modulename": "lmc.hardware.instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.instruction.Id": {"fullname": "lmc.hardware.instruction.Id", "modulename": "lmc.hardware.instruction", "qualname": "Id", "kind": "class", "doc": "<p>For identifying an instruction, internally in the computer</p>\n\n<p>Usage : Id.from_str('ADD') -> Id.ADD\nUsage : Id.from_str('BAD') -> None\nUsage : Id.from_str('ADD') == Id.ADD -> True\nUsage : Id.from_str('BAD') == None   -> True\nUsage : if Id.from_str('ADD'):\n            print('Found')</p>\n", "bases": "enum.Enum"}, "lmc.hardware.instruction.Id.ADD": {"fullname": "lmc.hardware.instruction.Id.ADD", "modulename": "lmc.hardware.instruction", "qualname": "Id.ADD", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.ADD: 1&gt;"}, "lmc.hardware.instruction.Id.SUB": {"fullname": "lmc.hardware.instruction.Id.SUB", "modulename": "lmc.hardware.instruction", "qualname": "Id.SUB", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.SUB: 2&gt;"}, "lmc.hardware.instruction.Id.STA": {"fullname": "lmc.hardware.instruction.Id.STA", "modulename": "lmc.hardware.instruction", "qualname": "Id.STA", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.STA: 3&gt;"}, "lmc.hardware.instruction.Id.LDA": {"fullname": "lmc.hardware.instruction.Id.LDA", "modulename": "lmc.hardware.instruction", "qualname": "Id.LDA", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.LDA: 4&gt;"}, "lmc.hardware.instruction.Id.BRA": {"fullname": "lmc.hardware.instruction.Id.BRA", "modulename": "lmc.hardware.instruction", "qualname": "Id.BRA", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.BRA: 5&gt;"}, "lmc.hardware.instruction.Id.BRZ": {"fullname": "lmc.hardware.instruction.Id.BRZ", "modulename": "lmc.hardware.instruction", "qualname": "Id.BRZ", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.BRZ: 6&gt;"}, "lmc.hardware.instruction.Id.BRP": {"fullname": "lmc.hardware.instruction.Id.BRP", "modulename": "lmc.hardware.instruction", "qualname": "Id.BRP", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.BRP: 7&gt;"}, "lmc.hardware.instruction.Id.INP": {"fullname": "lmc.hardware.instruction.Id.INP", "modulename": "lmc.hardware.instruction", "qualname": "Id.INP", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.INP: 8&gt;"}, "lmc.hardware.instruction.Id.OUT": {"fullname": "lmc.hardware.instruction.Id.OUT", "modulename": "lmc.hardware.instruction", "qualname": "Id.OUT", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.OUT: 9&gt;"}, "lmc.hardware.instruction.Id.HLT": {"fullname": "lmc.hardware.instruction.Id.HLT", "modulename": "lmc.hardware.instruction", "qualname": "Id.HLT", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.HLT: 10&gt;"}, "lmc.hardware.instruction.Id.DAT": {"fullname": "lmc.hardware.instruction.Id.DAT", "modulename": "lmc.hardware.instruction", "qualname": "Id.DAT", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Id.DAT: 11&gt;"}, "lmc.hardware.instruction.Id.from_mnemonic": {"fullname": "lmc.hardware.instruction.Id.from_mnemonic", "modulename": "lmc.hardware.instruction", "qualname": "Id.from_mnemonic", "kind": "function", "doc": "<p>Take the string value for a mnemonic, and convert it to the corresponding instruction id</p>\n\n<p>If there is no match for the mnemonic string, then return None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mnemonic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"fullname": "lmc.hardware.instruction.Id.mnemonic_has_no_label", "modulename": "lmc.hardware.instruction", "qualname": "Id.mnemonic_has_no_label", "kind": "function", "doc": "<p>These mnemonics, cannot have a label before them</p>\n\n<p>If there is no match for the mnemonic string, then return None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mnemonic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"fullname": "lmc.hardware.instruction.Id.mnemonic_has_label", "modulename": "lmc.hardware.instruction", "qualname": "Id.mnemonic_has_label", "kind": "function", "doc": "<p>These mnemonics, can have a label before them</p>\n\n<p>If there is no match for the mnemonic string, then return None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mnemonic</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Id</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.InstructionBuilder": {"fullname": "lmc.hardware.instruction.InstructionBuilder", "modulename": "lmc.hardware.instruction", "qualname": "InstructionBuilder", "kind": "class", "doc": "<p></p>\n"}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"fullname": "lmc.hardware.instruction.InstructionBuilder.__init__", "modulename": "lmc.hardware.instruction", "qualname": "InstructionBuilder.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.instruction.InstructionBuilder.build": {"fullname": "lmc.hardware.instruction.InstructionBuilder.build", "modulename": "lmc.hardware.instruction", "qualname": "InstructionBuilder.build", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">instruction_id</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Id</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">ADD</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">SUB</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">STA</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">LDA</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">BRA</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">BRZ</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">BRP</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">INP</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">OUT</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">HLT</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">DAT</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.Instruction": {"fullname": "lmc.hardware.instruction.Instruction", "modulename": "lmc.hardware.instruction", "qualname": "Instruction", "kind": "class", "doc": "<p></p>\n"}, "lmc.hardware.instruction.Instruction.__init__": {"fullname": "lmc.hardware.instruction.Instruction.__init__", "modulename": "lmc.hardware.instruction", "qualname": "Instruction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instruction_id</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">hardware</span><span class=\"o\">.</span><span class=\"n\">instruction</span><span class=\"o\">.</span><span class=\"n\">Id</span></span>)</span>"}, "lmc.hardware.instruction.ADD": {"fullname": "lmc.hardware.instruction.ADD", "modulename": "lmc.hardware.instruction", "qualname": "ADD", "kind": "class", "doc": "<p>Internal computer addition instruction</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.ADD.__init__": {"fullname": "lmc.hardware.instruction.ADD.__init__", "modulename": "lmc.hardware.instruction", "qualname": "ADD.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.ADD.get_code": {"fullname": "lmc.hardware.instruction.ADD.get_code", "modulename": "lmc.hardware.instruction", "qualname": "ADD.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.ADD.get_address": {"fullname": "lmc.hardware.instruction.ADD.get_address", "modulename": "lmc.hardware.instruction", "qualname": "ADD.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.ADD.set_address": {"fullname": "lmc.hardware.instruction.ADD.set_address", "modulename": "lmc.hardware.instruction", "qualname": "ADD.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.SUB": {"fullname": "lmc.hardware.instruction.SUB", "modulename": "lmc.hardware.instruction", "qualname": "SUB", "kind": "class", "doc": "<p>Internal computer subtraction instruction</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.SUB.__init__": {"fullname": "lmc.hardware.instruction.SUB.__init__", "modulename": "lmc.hardware.instruction", "qualname": "SUB.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.SUB.get_code": {"fullname": "lmc.hardware.instruction.SUB.get_code", "modulename": "lmc.hardware.instruction", "qualname": "SUB.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.SUB.get_address": {"fullname": "lmc.hardware.instruction.SUB.get_address", "modulename": "lmc.hardware.instruction", "qualname": "SUB.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.SUB.set_address": {"fullname": "lmc.hardware.instruction.SUB.set_address", "modulename": "lmc.hardware.instruction", "qualname": "SUB.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.STA": {"fullname": "lmc.hardware.instruction.STA", "modulename": "lmc.hardware.instruction", "qualname": "STA", "kind": "class", "doc": "<p>Internal computer instruction, to store the accumulator into a memory location</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.STA.__init__": {"fullname": "lmc.hardware.instruction.STA.__init__", "modulename": "lmc.hardware.instruction", "qualname": "STA.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.STA.get_code": {"fullname": "lmc.hardware.instruction.STA.get_code", "modulename": "lmc.hardware.instruction", "qualname": "STA.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.STA.get_address": {"fullname": "lmc.hardware.instruction.STA.get_address", "modulename": "lmc.hardware.instruction", "qualname": "STA.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.STA.set_address": {"fullname": "lmc.hardware.instruction.STA.set_address", "modulename": "lmc.hardware.instruction", "qualname": "STA.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.LDA": {"fullname": "lmc.hardware.instruction.LDA", "modulename": "lmc.hardware.instruction", "qualname": "LDA", "kind": "class", "doc": "<p>Internal computer instruction, to load the accumulator from a memory location</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.LDA.__init__": {"fullname": "lmc.hardware.instruction.LDA.__init__", "modulename": "lmc.hardware.instruction", "qualname": "LDA.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.LDA.get_code": {"fullname": "lmc.hardware.instruction.LDA.get_code", "modulename": "lmc.hardware.instruction", "qualname": "LDA.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.LDA.get_address": {"fullname": "lmc.hardware.instruction.LDA.get_address", "modulename": "lmc.hardware.instruction", "qualname": "LDA.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.LDA.set_address": {"fullname": "lmc.hardware.instruction.LDA.set_address", "modulename": "lmc.hardware.instruction", "qualname": "LDA.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRA": {"fullname": "lmc.hardware.instruction.BRA", "modulename": "lmc.hardware.instruction", "qualname": "BRA", "kind": "class", "doc": "<p>Internal computer instruction, unconditional branch to a memory location</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.BRA.__init__": {"fullname": "lmc.hardware.instruction.BRA.__init__", "modulename": "lmc.hardware.instruction", "qualname": "BRA.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.BRA.get_code": {"fullname": "lmc.hardware.instruction.BRA.get_code", "modulename": "lmc.hardware.instruction", "qualname": "BRA.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRA.get_address": {"fullname": "lmc.hardware.instruction.BRA.get_address", "modulename": "lmc.hardware.instruction", "qualname": "BRA.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRA.set_address": {"fullname": "lmc.hardware.instruction.BRA.set_address", "modulename": "lmc.hardware.instruction", "qualname": "BRA.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRZ": {"fullname": "lmc.hardware.instruction.BRZ", "modulename": "lmc.hardware.instruction", "qualname": "BRZ", "kind": "class", "doc": "<p>Internal computer instruction, unconditional branch to a memory location - if the accumulator is zero</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.BRZ.__init__": {"fullname": "lmc.hardware.instruction.BRZ.__init__", "modulename": "lmc.hardware.instruction", "qualname": "BRZ.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.BRZ.get_code": {"fullname": "lmc.hardware.instruction.BRZ.get_code", "modulename": "lmc.hardware.instruction", "qualname": "BRZ.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRZ.get_address": {"fullname": "lmc.hardware.instruction.BRZ.get_address", "modulename": "lmc.hardware.instruction", "qualname": "BRZ.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRZ.set_address": {"fullname": "lmc.hardware.instruction.BRZ.set_address", "modulename": "lmc.hardware.instruction", "qualname": "BRZ.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRP": {"fullname": "lmc.hardware.instruction.BRP", "modulename": "lmc.hardware.instruction", "qualname": "BRP", "kind": "class", "doc": "<p>Internal computer instruction, unconditional branch to a memory location - if the accumulator is positive</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.BRP.__init__": {"fullname": "lmc.hardware.instruction.BRP.__init__", "modulename": "lmc.hardware.instruction", "qualname": "BRP.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.instruction.BRP.get_code": {"fullname": "lmc.hardware.instruction.BRP.get_code", "modulename": "lmc.hardware.instruction", "qualname": "BRP.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRP.get_address": {"fullname": "lmc.hardware.instruction.BRP.get_address", "modulename": "lmc.hardware.instruction", "qualname": "BRP.get_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.BRP.set_address": {"fullname": "lmc.hardware.instruction.BRP.set_address", "modulename": "lmc.hardware.instruction", "qualname": "BRP.set_address", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.INP": {"fullname": "lmc.hardware.instruction.INP", "modulename": "lmc.hardware.instruction", "qualname": "INP", "kind": "class", "doc": "<p>Internal computer instruction, to input a value from the user to the accumulator</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.INP.__init__": {"fullname": "lmc.hardware.instruction.INP.__init__", "modulename": "lmc.hardware.instruction", "qualname": "INP.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.instruction.INP.get_code": {"fullname": "lmc.hardware.instruction.INP.get_code", "modulename": "lmc.hardware.instruction", "qualname": "INP.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.OUT": {"fullname": "lmc.hardware.instruction.OUT", "modulename": "lmc.hardware.instruction", "qualname": "OUT", "kind": "class", "doc": "<p>Internal computer instruction, to output a value from the accumulator to the user</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.OUT.__init__": {"fullname": "lmc.hardware.instruction.OUT.__init__", "modulename": "lmc.hardware.instruction", "qualname": "OUT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.instruction.OUT.get_code": {"fullname": "lmc.hardware.instruction.OUT.get_code", "modulename": "lmc.hardware.instruction", "qualname": "OUT.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.HLT": {"fullname": "lmc.hardware.instruction.HLT", "modulename": "lmc.hardware.instruction", "qualname": "HLT", "kind": "class", "doc": "<p>Internal computer instruction, to halt the currently executing program</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.HLT.__init__": {"fullname": "lmc.hardware.instruction.HLT.__init__", "modulename": "lmc.hardware.instruction", "qualname": "HLT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.instruction.HLT.get_code": {"fullname": "lmc.hardware.instruction.HLT.get_code", "modulename": "lmc.hardware.instruction", "qualname": "HLT.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.instruction.DAT": {"fullname": "lmc.hardware.instruction.DAT", "modulename": "lmc.hardware.instruction", "qualname": "DAT", "kind": "class", "doc": "<p>Mnuemonic assembler instruction, to allocate memory for a value in memory - and optionally set the value</p>\n", "bases": "Instruction"}, "lmc.hardware.instruction.DAT.__init__": {"fullname": "lmc.hardware.instruction.DAT.__init__", "modulename": "lmc.hardware.instruction", "qualname": "DAT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">initial_value</span><span class=\"o\">=</span><span class=\"mi\">0</span></span>)</span>"}, "lmc.hardware.instruction.DAT.get_code": {"fullname": "lmc.hardware.instruction.DAT.get_code", "modulename": "lmc.hardware.instruction", "qualname": "DAT.get_code", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.memory": {"fullname": "lmc.hardware.memory", "modulename": "lmc.hardware.memory", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.memory.Memory": {"fullname": "lmc.hardware.memory.Memory", "modulename": "lmc.hardware.memory", "qualname": "Memory", "kind": "class", "doc": "<p>The internal computer memory, which is 100 integer cells - initialized to zeros</p>\n"}, "lmc.hardware.memory.Memory.__init__": {"fullname": "lmc.hardware.memory.Memory.__init__", "modulename": "lmc.hardware.memory", "qualname": "Memory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.memory.Memory.get_value": {"fullname": "lmc.hardware.memory.Memory.get_value", "modulename": "lmc.hardware.memory", "qualname": "Memory.get_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.memory.Memory.set_value": {"fullname": "lmc.hardware.memory.Memory.set_value", "modulename": "lmc.hardware.memory", "qualname": "Memory.set_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.out_buffer": {"fullname": "lmc.hardware.out_buffer", "modulename": "lmc.hardware.out_buffer", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.out_buffer.OutBuffer": {"fullname": "lmc.hardware.out_buffer.OutBuffer", "modulename": "lmc.hardware.out_buffer", "qualname": "OutBuffer", "kind": "class", "doc": "<p>Performs and controls output to the user from the computer</p>\n\n<p>The output written, can be captured to a file, for testing. The file to write to\nis either supplied through the constructor, or by a 'setter' method</p>\n\n<p>Alternatively, the last value written is stored, and can be retrieved for testing</p>\n"}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"fullname": "lmc.hardware.out_buffer.OutBuffer.__init__", "modulename": "lmc.hardware.out_buffer", "qualname": "OutBuffer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_to_write_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"fullname": "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to", "modulename": "lmc.hardware.out_buffer", "qualname": "OutBuffer.set_file_to_write_to", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_to_write_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"fullname": "lmc.hardware.out_buffer.OutBuffer.write_value", "modulename": "lmc.hardware.out_buffer", "qualname": "OutBuffer.write_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"fullname": "lmc.hardware.out_buffer.OutBuffer.get_value_for_test", "modulename": "lmc.hardware.out_buffer", "qualname": "OutBuffer.get_value_for_test", "kind": "function", "doc": "<p>Gets the last value that was written</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.hardware.processor": {"fullname": "lmc.hardware.processor", "modulename": "lmc.hardware.processor", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.processor.Processor": {"fullname": "lmc.hardware.processor.Processor", "modulename": "lmc.hardware.processor", "qualname": "Processor", "kind": "class", "doc": "<p>Processes the internal computer instructions, that are stored in the computer's memory</p>\n"}, "lmc.hardware.processor.Processor.__init__": {"fullname": "lmc.hardware.processor.Processor.__init__", "modulename": "lmc.hardware.processor", "qualname": "Processor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">program_counter</span>, </span><span class=\"param\"><span class=\"n\">memory</span>, </span><span class=\"param\"><span class=\"n\">accumulator</span>, </span><span class=\"param\"><span class=\"n\">inp</span>, </span><span class=\"param\"><span class=\"n\">out</span></span>)</span>"}, "lmc.hardware.processor.Processor.run_program": {"fullname": "lmc.hardware.processor.Processor.run_program", "modulename": "lmc.hardware.processor", "qualname": "Processor.run_program", "kind": "function", "doc": "<p>Execute the integer opcodes that are storied in the computer memory.</p>\n\n<p>To do this, convert the opcodes into the corresponding computer instruction,\nwhich can then be executed by the processor</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.process_instruction": {"fullname": "lmc.hardware.processor.Processor.process_instruction", "modulename": "lmc.hardware.processor", "qualname": "Processor.process_instruction", "kind": "function", "doc": "<p>Process a known computer instructions</p>\n\n<p>If the instruction is not recognized, it is just ignored as it requires no processing - such\nas a instruction</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">instruction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_add": {"fullname": "lmc.hardware.processor.Processor.do_add", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_add", "kind": "function", "doc": "<p>Add value in memory, to the accumulator</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_sub": {"fullname": "lmc.hardware.processor.Processor.do_sub", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_sub", "kind": "function", "doc": "<p>Subtract value in memory, from the accumulator</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_sta": {"fullname": "lmc.hardware.processor.Processor.do_sta", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_sta", "kind": "function", "doc": "<p>Store the accumulator's value into memory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_lda": {"fullname": "lmc.hardware.processor.Processor.do_lda", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_lda", "kind": "function", "doc": "<p>Load the accumulator's value from memory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_bra": {"fullname": "lmc.hardware.processor.Processor.do_bra", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_bra", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_brz": {"fullname": "lmc.hardware.processor.Processor.do_brz", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_brz", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_brp": {"fullname": "lmc.hardware.processor.Processor.do_brp", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_brp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_inp": {"fullname": "lmc.hardware.processor.Processor.do_inp", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_inp", "kind": "function", "doc": "<p>Get value from the user, store in in the INPut Buffer, and then the accumulator</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.do_out": {"fullname": "lmc.hardware.processor.Processor.do_out", "modulename": "lmc.hardware.processor", "qualname": "Processor.do_out", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.get_program_counter": {"fullname": "lmc.hardware.processor.Processor.get_program_counter", "modulename": "lmc.hardware.processor", "qualname": "Processor.get_program_counter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.get_memory": {"fullname": "lmc.hardware.processor.Processor.get_memory", "modulename": "lmc.hardware.processor", "qualname": "Processor.get_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.get_accumulator": {"fullname": "lmc.hardware.processor.Processor.get_accumulator", "modulename": "lmc.hardware.processor", "qualname": "Processor.get_accumulator", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.get_input_buffer": {"fullname": "lmc.hardware.processor.Processor.get_input_buffer", "modulename": "lmc.hardware.processor", "qualname": "Processor.get_input_buffer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.processor.Processor.get_output_buffer": {"fullname": "lmc.hardware.processor.Processor.get_output_buffer", "modulename": "lmc.hardware.processor", "qualname": "Processor.get_output_buffer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.program_counter": {"fullname": "lmc.hardware.program_counter", "modulename": "lmc.hardware.program_counter", "kind": "module", "doc": "<p></p>\n"}, "lmc.hardware.program_counter.ProgramCounter": {"fullname": "lmc.hardware.program_counter.ProgramCounter", "modulename": "lmc.hardware.program_counter", "qualname": "ProgramCounter", "kind": "class", "doc": "<p>The internal computer program, used during the execution of internal computer instructions</p>\n"}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"fullname": "lmc.hardware.program_counter.ProgramCounter.__init__", "modulename": "lmc.hardware.program_counter", "qualname": "ProgramCounter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"fullname": "lmc.hardware.program_counter.ProgramCounter.get_value", "modulename": "lmc.hardware.program_counter", "qualname": "ProgramCounter.get_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"fullname": "lmc.hardware.program_counter.ProgramCounter.debug_get_value", "modulename": "lmc.hardware.program_counter", "qualname": "ProgramCounter.debug_get_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"fullname": "lmc.hardware.program_counter.ProgramCounter.set_value", "modulename": "lmc.hardware.program_counter", "qualname": "ProgramCounter.set_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io": {"fullname": "lmc.io", "modulename": "lmc.io", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file": {"fullname": "lmc.io.file", "modulename": "lmc.io.file", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.executable_program": {"fullname": "lmc.io.file.executable_program", "modulename": "lmc.io.file.executable_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.executable_program.executable_instruction": {"fullname": "lmc.io.file.executable_program.executable_instruction", "modulename": "lmc.io.file.executable_program.executable_instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableItem", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableItem", "kind": "class", "doc": "<p>An executable item, has an index in an executable program or its file representation</p>\n\n<p>This is it's position in that program or file representation</p>\n\n<p>The index can be used, when an error is encountered with a executable opcode in a file, so we can\nidentify, where the error is at</p>\n"}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableItem.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableItem.set_index", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableItem.get_index", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstruction", "kind": "class", "doc": "<p>An instruction capable of being executed by the computer</p>\n\n<p>It is primarily a executable_program 'opcode', which is an integer number</p>\n", "bases": "ExecutableItem"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstruction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">opcode</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstruction.get_opcode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstructionError", "kind": "class", "doc": "<p>Represents an error encountered, in getting an executable instruction from a program file</p>\n", "bases": "ExecutableItem"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstructionError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"fullname": "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message", "modulename": "lmc.io.file.executable_program.executable_instruction", "qualname": "ExecutableInstructionError.get_message", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program": {"fullname": "lmc.io.file.executable_program.executable_program", "modulename": "lmc.io.file.executable_program.executable_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram", "kind": "class", "doc": "<p>An executable program, is the list of executable instructions, including any errors\nfound with the instructions</p>\n"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.get_max_size", "kind": "function", "doc": "<p>Get the maximum number of executable_program opcodes that can be allocated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.has_errors", "kind": "function", "doc": "<p>Determine if the executable instructions contains any errors</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.get_list_errors", "kind": "function", "doc": "<p>Get a list of the errors, found with the instructions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.append", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.append", "kind": "function", "doc": "<p>Append an executable instruction</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">executable_instruction</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_instruction</span><span class=\"o\">.</span><span class=\"n\">ExecutableInstruction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.is_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"fullname": "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image", "modulename": "lmc.io.file.executable_program.executable_program", "qualname": "ExecutableProgram.get_memory_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program_file": {"fullname": "lmc.io.file.executable_program.executable_program_file", "modulename": "lmc.io.file.executable_program.executable_program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile", "kind": "class", "doc": "<p>An executable program file, is a stored version of an internal program, that can be\nwritten as a file, and read back in using a string encoding for the opcodes.</p>\n", "bases": "lmc.io.file.program_file.ProgramFile"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.write", "kind": "function", "doc": "<p>Write an internal program out as a sored executable program file.</p>\n\n<p>Do this by writing the internal program opcodes out, as 3 digit string\nrepresentations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">internal_program</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">memory_image</span><span class=\"o\">.</span><span class=\"n\">MemoryImage</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.read", "kind": "function", "doc": "<p>Read 3 digit string opcodes representations from a file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.get_executable_program", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">ExecutableProgram</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">executable_instruction</span><span class=\"p\">:</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_instruction</span><span class=\"o\">.</span><span class=\"n\">ExecutableInstruction</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"fullname": "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode", "modulename": "lmc.io.file.executable_program.executable_program_file", "qualname": "ExecutableProgramFile.parse_external_opcode", "kind": "function", "doc": "<p>Parse an external opcode from a file, into an internal opcode</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">opcode</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_instruction</span><span class=\"o\">.</span><span class=\"n\">ExecutableInstruction</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_instruction</span><span class=\"o\">.</span><span class=\"n\">ExecutableInstructionError</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.program_file": {"fullname": "lmc.io.file.program_file", "modulename": "lmc.io.file.program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.program_file.ProgramFile": {"fullname": "lmc.io.file.program_file.ProgramFile", "modulename": "lmc.io.file.program_file", "qualname": "ProgramFile", "kind": "class", "doc": "<p></p>\n"}, "lmc.io.file.program_file.ProgramFile.__init__": {"fullname": "lmc.io.file.program_file.ProgramFile.__init__", "modulename": "lmc.io.file.program_file", "qualname": "ProgramFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "lmc.io.file.program_file.ProgramFile.exists": {"fullname": "lmc.io.file.program_file.ProgramFile.exists", "modulename": "lmc.io.file.program_file", "qualname": "ProgramFile.exists", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.program_file.ProgramFile.is_empty": {"fullname": "lmc.io.file.program_file.ProgramFile.is_empty", "modulename": "lmc.io.file.program_file", "qualname": "ProgramFile.is_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"fullname": "lmc.io.file.program_file.ProgramFile.size_in_bytes", "modulename": "lmc.io.file.program_file", "qualname": "ProgramFile.size_in_bytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram": {"fullname": "lmc.io.file.source_pprogram", "modulename": "lmc.io.file.source_pprogram", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.source_pprogram.source_instruction": {"fullname": "lmc.io.file.source_pprogram.source_instruction", "modulename": "lmc.io.file.source_pprogram.source_instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceItem", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceItem", "kind": "class", "doc": "<p></p>\n"}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceItem.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceItem.set_line_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line_number</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceItem.get_line_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionNoLabel", "kind": "class", "doc": "<p></p>\n", "bases": "SourceItem"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionNoLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instruction</span></span>)</span>"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionNoLabel.get_instruction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionWithLabel", "kind": "class", "doc": "<p></p>\n", "bases": "SourceItem"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionWithLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instruction</span>, </span><span class=\"param\"><span class=\"n\">label</span></span>)</span>"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionWithLabel.get_instruction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionWithLabel.get_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionDat", "kind": "class", "doc": "<p></p>\n", "bases": "SourceItem"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionDat.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instruction</span></span>)</span>"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionDat.get_instruction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionError", "kind": "class", "doc": "<p></p>\n", "bases": "SourceItem"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"fullname": "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message", "modulename": "lmc.io.file.source_pprogram.source_instruction", "qualname": "SourceInstructionError.get_message", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_program": {"fullname": "lmc.io.file.source_pprogram.source_program", "modulename": "lmc.io.file.source_pprogram.source_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram", "kind": "class", "doc": "<p>A source program, is the list of source instructions, including any errors found</p>\n"}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram.get_max_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram.has_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram.get_list_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"fullname": "lmc.io.file.source_pprogram.source_program.SourceProgram.append", "modulename": "lmc.io.file.source_pprogram.source_program", "qualname": "SourceProgram.append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">source_instruction</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_instruction</span><span class=\"o\">.</span><span class=\"n\">SourceInstructionNoLabel</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_instruction</span><span class=\"o\">.</span><span class=\"n\">SourceInstructionWithLabel</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_instruction</span><span class=\"o\">.</span><span class=\"n\">SourceInstructionDat</span><span class=\"p\">,</span> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">source_pprogram</span><span class=\"o\">.</span><span class=\"n\">source_instruction</span><span class=\"o\">.</span><span class=\"n\">SourceInstructionError</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.io.file.source_pprogram.source_program_file": {"fullname": "lmc.io.file.source_pprogram.source_program_file", "modulename": "lmc.io.file.source_pprogram.source_program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"fullname": "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile", "modulename": "lmc.io.file.source_pprogram.source_program_file", "qualname": "SourceProgramFile", "kind": "class", "doc": "<p>A source program file, is the collection of lines representing the source\ncode, for a 'little man computer' program</p>\n", "bases": "lmc.io.file.program_file.ProgramFile"}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"fullname": "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__", "modulename": "lmc.io.file.source_pprogram.source_program_file", "qualname": "SourceProgramFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"fullname": "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read", "modulename": "lmc.io.file.source_pprogram.source_program_file", "qualname": "SourceProgramFile.read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test": {"fullname": "lmc.test", "modulename": "lmc.test", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.application": {"fullname": "lmc.test.application", "modulename": "lmc.test.application", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.application.test_error_fatal": {"fullname": "lmc.test.application.test_error_fatal", "modulename": "lmc.test.application.test_error_fatal", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.application.test_error_fatal.TestComputer": {"fullname": "lmc.test.application.test_error_fatal.TestComputer", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"fullname": "lmc.test.application.test_error_fatal.TestComputer.__init__", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"fullname": "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer.test_fatal_error", "kind": "function", "doc": "<p>Test I can cause the application to exit, giving a single error message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"fullname": "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer.test_fatal_errors", "kind": "function", "doc": "<p>Test I can cause the application to exit, giving multiple error messages</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"fullname": "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer.test_fatal_error_file_not_found", "kind": "function", "doc": "<p>Test I can cause the application to exit, when a file was not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"fullname": "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty", "modulename": "lmc.test.application.test_error_fatal", "qualname": "TestComputer.test_fatal_error_file_is_empty", "kind": "function", "doc": "<p>Test I can cause the application to exit, when a file was empty</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.application.test_error_warn": {"fullname": "lmc.test.application.test_error_warn", "modulename": "lmc.test.application.test_error_warn", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.application.test_error_warn.TestErrorWarn": {"fullname": "lmc.test.application.test_error_warn.TestErrorWarn", "modulename": "lmc.test.application.test_error_warn", "qualname": "TestErrorWarn", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"fullname": "lmc.test.application.test_error_warn.TestErrorWarn.__init__", "modulename": "lmc.test.application.test_error_warn", "qualname": "TestErrorWarn.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"fullname": "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error", "modulename": "lmc.test.application.test_error_warn", "qualname": "TestErrorWarn.test_warn_error", "kind": "function", "doc": "<p>Test a warning message can be issued for the user to stdout</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"fullname": "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float", "modulename": "lmc.test.application.test_error_warn", "qualname": "TestErrorWarn.test_warn_input_not_integer_or_float", "kind": "function", "doc": "<p>Test a warning message can be issued for the user to stdout,\nwhen an input value was not an integer or floating point value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler": {"fullname": "lmc.test.assembler", "modulename": "lmc.test.assembler", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_label": {"fullname": "lmc.test.assembler.test_label", "modulename": "lmc.test.assembler.test_label", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_label.TestLabel": {"fullname": "lmc.test.assembler.test_label.TestLabel", "modulename": "lmc.test.assembler.test_label", "qualname": "TestLabel", "kind": "class", "doc": "<p>Test a source language token can be identified as a 'label'</p>\n"}, "lmc.test.assembler.test_label.TestLabel.__init__": {"fullname": "lmc.test.assembler.test_label.TestLabel.__init__", "modulename": "lmc.test.assembler.test_label", "qualname": "TestLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"fullname": "lmc.test.assembler.test_label.TestLabel.test_is_label", "modulename": "lmc.test.assembler.test_label", "qualname": "TestLabel.test_is_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source_file_token</span>, </span><span class=\"param\"><span class=\"n\">expected_result</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_parser": {"fullname": "lmc.test.assembler.test_parser", "modulename": "lmc.test.assembler.test_parser", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasNoLabel", "kind": "class", "doc": "<p>Test source language instructions that do not have an associated label</p>\n"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasNoLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasNoLabel.test_mnemonic_no_label", "kind": "function", "doc": "<p>Test the parser correctly determines when a source language instruction has no associated\nlabel - INP, OUT, HLT</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_source_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_source_instruction_type</span>,</span><span class=\"param\">\t<span class=\"n\">expected_hardware_instruction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasLabel", "kind": "class", "doc": "<p>Test source language instructions that do have an associated label</p>\n"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label", "kind": "function", "doc": "<p>Test the parser correctly determines when a source language instruction has an associated\nlabel - ADD, SUB, STA, LDA, BRA, BRZ and BRP</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_source_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_source_instruction_type</span>,</span><span class=\"param\">\t<span class=\"n\">expected_hardware_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_label</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicIsDat", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicIsDat", "kind": "class", "doc": "<p>Test source language DAT instruction</p>\n"}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicIsDat.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value", "kind": "function", "doc": "<p>Test the parser correctly determines when a DAT source language instruction, has or does\nnot have an associated value</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_dat_source_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_source_instruction_type</span>,</span><span class=\"param\">\t<span class=\"n\">expected_dat_hardware_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasError", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasError", "kind": "class", "doc": "<p>Test source language instructions that have an error</p>\n"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"fullname": "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error", "modulename": "lmc.test.assembler.test_parser", "qualname": "TestParserMnemonicHasError.test_mnemonic_has_error", "kind": "function", "doc": "<p>Test the parser parses an erroneous source language instruction, and gives the\ncorresponding error message</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_source_instruction_containing_error</span>,</span><span class=\"param\">\t<span class=\"n\">expected_source_instruction_error</span>,</span><span class=\"param\">\t<span class=\"n\">expected_error_message</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_pass_one": {"fullname": "lmc.test.assembler.test_pass_one", "modulename": "lmc.test.assembler.test_pass_one", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_pass_one.TestPassOne": {"fullname": "lmc.test.assembler.test_pass_one.TestPassOne", "modulename": "lmc.test.assembler.test_pass_one", "qualname": "TestPassOne", "kind": "class", "doc": "<p>Test the assembler can perform the 'pass one' stage</p>\n"}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"fullname": "lmc.test.assembler.test_pass_one.TestPassOne.__init__", "modulename": "lmc.test.assembler.test_pass_one", "qualname": "TestPassOne.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"fullname": "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file", "modulename": "lmc.test.assembler.test_pass_one", "qualname": "TestPassOne.test_stage_pass_one_can_decode_a_source_program_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_pass_two": {"fullname": "lmc.test.assembler.test_pass_two", "modulename": "lmc.test.assembler.test_pass_two", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"fullname": "lmc.test.assembler.test_pass_two.TestPassTwo", "modulename": "lmc.test.assembler.test_pass_two", "qualname": "TestPassTwo", "kind": "class", "doc": "<p>Test the assembler can perform the 'pass stage' stage</p>\n"}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"fullname": "lmc.test.assembler.test_pass_two.TestPassTwo.__init__", "modulename": "lmc.test.assembler.test_pass_two", "qualname": "TestPassTwo.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"fullname": "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one", "modulename": "lmc.test.assembler.test_pass_two", "qualname": "TestPassTwo.fixture_pass_one", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"fullname": "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode", "modulename": "lmc.test.assembler.test_pass_two", "qualname": "TestPassTwo.test_encode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_pass_one</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"fullname": "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction", "modulename": "lmc.test.assembler.test_pass_two", "qualname": "TestPassTwo.test_encode_bad_source_instruction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_symbol_table": {"fullname": "lmc.test.assembler.test_symbol_table", "modulename": "lmc.test.assembler.test_symbol_table", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"fullname": "lmc.test.assembler.test_symbol_table.TestSymbolTable", "modulename": "lmc.test.assembler.test_symbol_table", "qualname": "TestSymbolTable", "kind": "class", "doc": "<p>Test the symbol table can hold the values for corresponding source language instructions</p>\n"}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"fullname": "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__", "modulename": "lmc.test.assembler.test_symbol_table", "qualname": "TestSymbolTable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"fullname": "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table", "modulename": "lmc.test.assembler.test_symbol_table", "qualname": "TestSymbolTable.fixture_symbol_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"fullname": "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table", "modulename": "lmc.test.assembler.test_symbol_table", "qualname": "TestSymbolTable.test_get_values_from_symbol_table", "kind": "function", "doc": "<p>Test I can get the value from a symbol table</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_symbol_table</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"fullname": "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string", "modulename": "lmc.test.assembler.test_symbol_table", "qualname": "TestSymbolTable.test_get_the_symbol_table_as_a_string", "kind": "function", "doc": "<p>Test I can get the symbol table as a string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_symbol_table</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer": {"fullname": "lmc.test.computer", "modulename": "lmc.test.computer", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_computer_for_file_handling": {"fullname": "lmc.test.computer.test_computer_for_file_handling", "modulename": "lmc.test.computer.test_computer_for_file_handling", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling.this_tests_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling.test_file_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"fullname": "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes", "modulename": "lmc.test.computer.test_computer_for_file_handling", "qualname": "TestComputerProgramFileHandling.test_file_has_bad_opcodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs": {"fullname": "lmc.test.computer.test_computer_with_example_programs", "modulename": "lmc.test.computer.test_computer_with_example_programs", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.this_tests_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.test_example_program_add_numbers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.test_example_program_count_down", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.test_example_print_self", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.test_example_program_square_a_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"fullname": "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers", "modulename": "lmc.test.computer.test_computer_with_example_programs", "qualname": "TestComputerWithExamplePrograms.test_sub_two_numbers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">this_tests_directory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_integer_opcode": {"fullname": "lmc.test.computer.test_integer_opcode", "modulename": "lmc.test.computer.test_integer_opcode", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"fullname": "lmc.test.computer.test_integer_opcode.TestIntegerOpcode", "modulename": "lmc.test.computer.test_integer_opcode", "qualname": "TestIntegerOpcode", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"fullname": "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__", "modulename": "lmc.test.computer.test_integer_opcode", "qualname": "TestIntegerOpcode.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"fullname": "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder", "modulename": "lmc.test.computer.test_integer_opcode", "qualname": "TestIntegerOpcode.test_binary_opcode_decoder", "kind": "function", "doc": "<p>Test decoding a binary opcode, gives the corresponding executable instruction</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">test_integer_opcode</span>, </span><span class=\"param\"><span class=\"n\">expected_computer_instruction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_loader": {"fullname": "lmc.test.computer.test_loader", "modulename": "lmc.test.computer.test_loader", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_loader.TestLoader": {"fullname": "lmc.test.computer.test_loader.TestLoader", "modulename": "lmc.test.computer.test_loader", "qualname": "TestLoader", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.computer.test_loader.TestLoader.__init__": {"fullname": "lmc.test.computer.test_loader.TestLoader.__init__", "modulename": "lmc.test.computer.test_loader", "qualname": "TestLoader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"fullname": "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes", "modulename": "lmc.test.computer.test_loader", "qualname": "TestLoader.fixture_test_loader_opcodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"fullname": "lmc.test.computer.test_loader.TestLoader.test_read_into_memory", "modulename": "lmc.test.computer.test_loader", "qualname": "TestLoader.test_read_into_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_test_loader_opcodes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image": {"fullname": "lmc.test.computer.test_memory_image", "modulename": "lmc.test.computer.test_memory_image", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.__init__", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_get_max_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_appending_gives_the_correct_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_appending_more_than_max_size_gives_exception", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_python_setitem_and_getitem_methods", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"fullname": "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method", "modulename": "lmc.test.computer.test_memory_image", "qualname": "TestMemoryImage.test_python_str_method", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware": {"fullname": "lmc.test.hardware", "modulename": "lmc.test.hardware", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.conftest": {"fullname": "lmc.test.hardware.conftest", "modulename": "lmc.test.hardware.conftest", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.conftest.fixture_processor": {"fullname": "lmc.test.hardware.conftest.fixture_processor", "modulename": "lmc.test.hardware.conftest", "qualname": "fixture_processor", "kind": "function", "doc": "<p>Create a processor instance, with the program counter, memory, accumulator, input buffer and output buffer</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"fullname": "lmc.test.hardware.conftest.fixture_processor_with_example_program_1", "modulename": "lmc.test.hardware.conftest", "qualname": "fixture_processor_with_example_program_1", "kind": "function", "doc": "<p>Create a processor instance, with a test program loaded into the processor memory</p>\n\n<p>The example program does the following :</p>\n\n<pre><code>Inputs a value\nStore the value into memory\nLoads the value back from memory into the accumulator\nBranch to step to the end of the program\nOutputs the value\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"fullname": "lmc.test.hardware.conftest.fixture_processor_with_example_program_2", "modulename": "lmc.test.hardware.conftest", "qualname": "fixture_processor_with_example_program_2", "kind": "function", "doc": "<p>Create a processor instance, with a test program loaded into the processor memory</p>\n\n<p>The example program does the following :</p>\n\n<pre><code>Inputs a value\nStore the value into memory\nLoads the value back from memory into the accumulator\nBranch-if-positive to step to the end of the program\nOutputs the value\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"fullname": "lmc.test.hardware.conftest.fixture_processor_with_example_program_3", "modulename": "lmc.test.hardware.conftest", "qualname": "fixture_processor_with_example_program_3", "kind": "function", "doc": "<p>Create a processor instance, with a test program loaded into the processor memory</p>\n\n<p>The example program does the following :</p>\n\n<pre><code>Inputs a value\nStore the value into memory\nLoads the value back from memory into the accumulator\nBranch-if-zero to step to the end of the program\nOutputs the value\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"fullname": "lmc.test.hardware.conftest.fixture_processor_with_example_program_4", "modulename": "lmc.test.hardware.conftest", "qualname": "fixture_processor_with_example_program_4", "kind": "function", "doc": "<p>Create a processor instance, with a test program loaded into the processor memory</p>\n\n<p>The example program does the following :</p>\n\n<pre><code>Input a value to the accumulator\nStore the value to memory\nAdd the value back to the accumulator, so it is now doubled\nAdd the value back to the accumulator, so it is now tripled\nSubtract the value from the accumulator is it is again only doubled\nOutput the value from the accumulator\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_accumulator": {"fullname": "lmc.test.hardware.test_accumulator", "modulename": "lmc.test.hardware.test_accumulator", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"fullname": "lmc.test.hardware.test_accumulator.TestAccumulator", "modulename": "lmc.test.hardware.test_accumulator", "qualname": "TestAccumulator", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"fullname": "lmc.test.hardware.test_accumulator.TestAccumulator.__init__", "modulename": "lmc.test.hardware.test_accumulator", "qualname": "TestAccumulator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"fullname": "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value", "modulename": "lmc.test.hardware.test_accumulator", "qualname": "TestAccumulator.test_accumulator_initial_value", "kind": "function", "doc": "<p>Test that the initial value of a new accumulator is 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"fullname": "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value", "modulename": "lmc.test.hardware.test_accumulator", "qualname": "TestAccumulator.test_set_and_get_of_accumulator_to_integer_value", "kind": "function", "doc": "<p>Test that the value of an accumulator can be set to an integer value and retrieved</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"fullname": "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value", "modulename": "lmc.test.hardware.test_accumulator", "qualname": "TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value", "kind": "function", "doc": "<p>Test that the value of an accumulator can be set to a floating point value and retrieved</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_input_buffer": {"fullname": "lmc.test.hardware.test_input_buffer", "modulename": "lmc.test.hardware.test_input_buffer", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"fullname": "lmc.test.hardware.test_input_buffer.TestInpBuffer", "modulename": "lmc.test.hardware.test_input_buffer", "qualname": "TestInpBuffer", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"fullname": "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__", "modulename": "lmc.test.hardware.test_input_buffer", "qualname": "TestInpBuffer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"fullname": "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file", "modulename": "lmc.test.hardware.test_input_buffer", "qualname": "TestInpBuffer.test_get_single_value_when_using_temp_file", "kind": "function", "doc": "<p>Test setting the input buffer with a single value using a temporary file</p>\n\n<p>This is used primarily to facilitate automated testing</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"fullname": "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file", "modulename": "lmc.test.hardware.test_input_buffer", "qualname": "TestInpBuffer.test_get_two_values_when_using_temp_file", "kind": "function", "doc": "<p>Test setting the input buffer with two values using a temporary file</p>\n\n<p>This is used primarily to facilitate automated testing</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"fullname": "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file", "modulename": "lmc.test.hardware.test_input_buffer", "qualname": "TestInpBuffer.test_get_multi_values_when_using_temp_file", "kind": "function", "doc": "<p>Test setting the input buffer with multiple values using a temporary file</p>\n\n<p>This is used primarily to facilitate automated testing</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_instruction": {"fullname": "lmc.test.hardware.test_instruction", "modulename": "lmc.test.hardware.test_instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoLabel", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoLabel", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoLabel.test_instruction_no_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_type</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_opcode</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionWithLabel", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionWithLabel", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionWithLabel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionWithLabel.test_instruction_with_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">test_instruction</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_type</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_opcode</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_address</span>,</span><span class=\"param\">\t<span class=\"n\">set_address</span>,</span><span class=\"param\">\t<span class=\"n\">expected_instruction_change_address</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoAddressSet", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoAddressSet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoAddressSet.test_instruction_add", "kind": "function", "doc": "<p>Test I get an error trying to get the address of an instruction, when no address is set</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id", "kind": "function", "doc": "<p>Test I can build an instruction from an instruction id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"fullname": "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id", "modulename": "lmc.test.hardware.test_instruction", "qualname": "TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id", "kind": "function", "doc": "<p>Test I get an error trying to build  an instruction from an unknown instruction id</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_memory": {"fullname": "lmc.test.hardware.test_memory", "modulename": "lmc.test.hardware.test_memory", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_memory.TestMemory": {"fullname": "lmc.test.hardware.test_memory.TestMemory", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"fullname": "lmc.test.hardware.test_memory.TestMemory.__init__", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"fullname": "lmc.test.hardware.test_memory.TestMemory.fixture_memory", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory.fixture_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"fullname": "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory.test_uninitialized_memory_locations_are_set_to_zero", "kind": "function", "doc": "<p>Test memory initial value is 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_memory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"fullname": "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory.test_setting_and_getting_memory_location_value", "kind": "function", "doc": "<p>Test memory value can be set and retrieved</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_memory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"fullname": "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method", "modulename": "lmc.test.hardware.test_memory", "qualname": "TestMemory.test_get_memory_using_python_str_method", "kind": "function", "doc": "<p>Test I can get the contents of memory as a string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_memory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_output_buffer": {"fullname": "lmc.test.hardware.test_output_buffer", "modulename": "lmc.test.hardware.test_output_buffer", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer.test_trying_to_get_value_when_empty_gives_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer.test_trying_to_get_value_when_it_has_one", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer.test_writing_a_single_value_to_a_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"fullname": "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file", "modulename": "lmc.test.hardware.test_output_buffer", "qualname": "TestOutBuffer.test_writing_a_two_values_to_a_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor": {"fullname": "lmc.test.hardware.test_processor", "modulename": "lmc.test.hardware.test_processor", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_add", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_sub", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_sta", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_lda", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_bra", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_brz", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_brp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"fullname": "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat", "modulename": "lmc.test.hardware.test_processor", "qualname": "TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor_with_example_programs": {"fullname": "lmc.test.hardware.test_processor_with_example_programs", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms.test_run_example_1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor_with_example_program_1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms.test_run_example_2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor_with_example_program_2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms.test_run_example_3", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor_with_example_program_3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"fullname": "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4", "modulename": "lmc.test.hardware.test_processor_with_example_programs", "qualname": "TestProcessorWithExamplePrograms.test_run_example_4", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_processor_with_example_program_4</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_program_counter": {"fullname": "lmc.test.hardware.test_program_counter", "modulename": "lmc.test.hardware.test_program_counter", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"fullname": "lmc.test.hardware.test_program_counter.TestProgramCounter", "modulename": "lmc.test.hardware.test_program_counter", "qualname": "TestProgramCounter", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"fullname": "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__", "modulename": "lmc.test.hardware.test_program_counter", "qualname": "TestProgramCounter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"fullname": "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value", "modulename": "lmc.test.hardware.test_program_counter", "qualname": "TestProgramCounter.test_initial_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"fullname": "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value", "modulename": "lmc.test.hardware.test_program_counter", "qualname": "TestProgramCounter.test_set_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io": {"fullname": "lmc.test.io", "modulename": "lmc.test.io", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file": {"fullname": "lmc.test.io.file", "modulename": "lmc.test.io.file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program": {"fullname": "lmc.test.io.file.executable_program", "modulename": "lmc.test.io.file.executable_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_instruction": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "qualname": "TestExecutableInstruction", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "qualname": "TestExecutableInstruction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "qualname": "TestExecutableInstruction.test_executable_instruction_getting_the_opcode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "qualname": "TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction", "qualname": "TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction_error", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction_error", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction_error", "qualname": "TestExecutableInstructionError", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction_error", "qualname": "TestExecutableInstructionError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction_error", "qualname": "TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"fullname": "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set", "modulename": "lmc.test.io.file.executable_program.test_executable_instruction_error", "qualname": "TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program": {"fullname": "lmc.test.io.file.executable_program.test_executable_program", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.fixture_executable_program_with_no_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">ExecutableProgram</span>:</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.fixture_executable_program_with_an_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">lmc</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">executable_program</span><span class=\"o\">.</span><span class=\"n\">ExecutableProgram</span>:</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_no_errors_check_length", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_no_errors</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_no_errors</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_no_errors</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_an_error_check_lengths", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_an_error</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_an_error_check_has_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_an_error</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_an_error</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_get_memory_image_when_program_has_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_executable_program_with_an_error</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_max_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_appending_maximum_number_of_opcodes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"fullname": "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty", "modulename": "lmc.test.io.file.executable_program.test_executable_program", "qualname": "TestExecutableProgram.test_get_memory_image_when_program_is_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.fixture_test_subtract_program_opcodes", "kind": "function", "doc": "<p>Test program used by a number of the tests here - subtract 2 numbers program</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.fixture_test_executable_filename", "kind": "function", "doc": "<p>Test executable program file name, also cleans up the file if it exists after the test</p>\n\n<p>See here for temporary files in pytest <a href=\"https://docs.pytest.org/en/6.2.x/tmpdir.html\">https://docs.pytest.org/en/6.2.x/tmpdir.html</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tmp_path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_write_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_subtract_program_opcodes</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_executable_filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_read_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_subtract_program_opcodes</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_executable_filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_python_get_method", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_subtract_program_opcodes</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_executable_filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_getting_as_a_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_subtract_program_opcodes</span>,</span><span class=\"param\">\t<span class=\"n\">fixture_test_executable_filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_when_executable_program_has_an_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"fullname": "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors", "modulename": "lmc.test.io.file.executable_program.test_executable_program_file", "qualname": "TestExecutableProgramFile.test_when_executable_program_has_multiple_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fixture_test_executable_filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program": {"fullname": "lmc.test.io.file.source_program", "modulename": "lmc.test.io.file.source_program", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_instruction": {"fullname": "lmc.test.io.file.source_program.test_source_instruction", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.test_source_instruction_no_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.test_source_instruction_with_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.test_source_instruction_dat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.test_source_instruction_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"fullname": "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item", "modulename": "lmc.test.io.file.source_program.test_source_instruction", "qualname": "TestSourceInstruction.test_source_item", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instructions": {"fullname": "lmc.test.io.file.source_program.test_source_instructions", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions.test_max_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions.test_instruction_no_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions.test_instruction_has_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"fullname": "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append", "modulename": "lmc.test.io.file.source_program.test_source_instructions", "qualname": "TestSourceInstructions.test_instruction_max_append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_program_file": {"fullname": "lmc.test.io.file.source_program.test_source_program_file", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram.create_test_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram.clean_test_file_if_exists", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram.test_read_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"fullname": "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str", "modulename": "lmc.test.io.file.source_program.test_source_program_file", "qualname": "TestSourceProgram.test_str", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.io.file.test_program_file": {"fullname": "lmc.test.io.file.test_program_file", "modulename": "lmc.test.io.file.test_program_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.io.file.test_program_file.TestProgram": {"fullname": "lmc.test.io.file.test_program_file.TestProgram", "modulename": "lmc.test.io.file.test_program_file", "qualname": "TestProgram", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"fullname": "lmc.test.io.file.test_program_file.TestProgram.__init__", "modulename": "lmc.test.io.file.test_program_file", "qualname": "TestProgram.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"fullname": "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty", "modulename": "lmc.test.io.file.test_program_file", "qualname": "TestProgram.test_exists_and_is_empty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util": {"fullname": "lmc.test.util", "modulename": "lmc.test.util", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.capture_stdout": {"fullname": "lmc.test.util.capture_stdout", "modulename": "lmc.test.util.capture_stdout", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.capture_stdout.CaptureStdout": {"fullname": "lmc.test.util.capture_stdout.CaptureStdout", "modulename": "lmc.test.util.capture_stdout", "qualname": "CaptureStdout", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"fullname": "lmc.test.util.capture_stdout.CaptureStdout.__init__", "modulename": "lmc.test.util.capture_stdout", "qualname": "CaptureStdout.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"fullname": "lmc.test.util.capture_stdout.CaptureStdout.redirect", "modulename": "lmc.test.util.capture_stdout", "qualname": "CaptureStdout.redirect", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">method</span>, </span><span class=\"param\"><span class=\"n\">text</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.empty_test_file": {"fullname": "lmc.test.util.empty_test_file", "modulename": "lmc.test.util.empty_test_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.empty_test_file.EmptyTestFile": {"fullname": "lmc.test.util.empty_test_file.EmptyTestFile", "modulename": "lmc.test.util.empty_test_file", "qualname": "EmptyTestFile", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"fullname": "lmc.test.util.empty_test_file.EmptyTestFile.__init__", "modulename": "lmc.test.util.empty_test_file", "qualname": "EmptyTestFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span>)</span>"}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"fullname": "lmc.test.util.empty_test_file.EmptyTestFile.create", "modulename": "lmc.test.util.empty_test_file", "qualname": "EmptyTestFile.create", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"fullname": "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist", "modulename": "lmc.test.util.empty_test_file", "qualname": "EmptyTestFile.remove_if_exist", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.temp_file": {"fullname": "lmc.test.util.temp_file", "modulename": "lmc.test.util.temp_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.temp_file.TempFile": {"fullname": "lmc.test.util.temp_file.TempFile", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.util.temp_file.TempFile.__init__": {"fullname": "lmc.test.util.temp_file.TempFile.__init__", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.util.temp_file.TempFile.get_filename": {"fullname": "lmc.test.util.temp_file.TempFile.get_filename", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.get_filename", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.test.util.temp_file.TempFile.delete": {"fullname": "lmc.test.util.temp_file.TempFile.delete", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.delete", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.temp_file.TempFile.writeln": {"fullname": "lmc.test.util.temp_file.TempFile.writeln", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.writeln", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.temp_file.TempFile.appendln": {"fullname": "lmc.test.util.temp_file.TempFile.appendln", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.appendln", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.temp_file.TempFile.read": {"fullname": "lmc.test.util.temp_file.TempFile.read", "modulename": "lmc.test.util.temp_file", "qualname": "TempFile.read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "lmc.test.util.test_data_file": {"fullname": "lmc.test.util.test_data_file", "modulename": "lmc.test.util.test_data_file", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.test_data_file.TestDataFile": {"fullname": "lmc.test.util.test_data_file.TestDataFile", "modulename": "lmc.test.util.test_data_file", "qualname": "TestDataFile", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"fullname": "lmc.test.util.test_data_file.TestDataFile.__init__", "modulename": "lmc.test.util.test_data_file", "qualname": "TestDataFile.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"fullname": "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists", "modulename": "lmc.test.util.test_data_file", "qualname": "TestDataFile.clean_test_file_if_exists", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"fullname": "lmc.test.util.test_data_file.TestDataFile.clean_test_file", "modulename": "lmc.test.util.test_data_file", "qualname": "TestDataFile.clean_test_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "lmc.test.util.test_data_opcodes": {"fullname": "lmc.test.util.test_data_opcodes", "modulename": "lmc.test.util.test_data_opcodes", "kind": "module", "doc": "<p></p>\n"}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"fullname": "lmc.test.util.test_data_opcodes.TestDataOpcodes", "modulename": "lmc.test.util.test_data_opcodes", "qualname": "TestDataOpcodes", "kind": "class", "doc": "<p></p>\n"}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"fullname": "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__", "modulename": "lmc.test.util.test_data_opcodes", "qualname": "TestDataOpcodes.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"fullname": "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract", "modulename": "lmc.test.util.test_data_opcodes", "qualname": "TestDataOpcodes.opcodes_subtract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"lmc": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.application": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "lmc.application.error_fatal": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.application.error_fatal.ErrorFatal": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "lmc.application.error_fatal.ErrorFatal.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.application.error_warn": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.application.error_warn.ErrorWarn": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "lmc.application.error_warn.ErrorWarn.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.application.error_warn.ErrorWarn.warn_error": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"qualname": 7, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.assembler": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "lmc.assembler.assembler": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.assembler.Assembler": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 107}, "lmc.assembler.assembler.Assembler.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.assembler.assembler.Assembler.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 30}, "lmc.assembler.label": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.label.Label": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.label.Label.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.assembler.label.Label.is_label": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "lmc.assembler.parser": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.get_symbol_table": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.get_source_instructions": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.parse_source_instruction": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.assembler.pass_one": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.pass_one.PassOne": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "lmc.assembler.pass_one.PassOne.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.assembler.pass_one.PassOne.get_source_program": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "lmc.assembler.pass_two": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.pass_two.PassTwo": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.pass_two.PassTwo.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 3}, "lmc.assembler.symbol_table": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.symbol_table.SymbolTable": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.computer": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "lmc.computer.computer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.computer.Computer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "lmc.computer.computer.Computer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.computer.computer.Computer.get_processor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.computer.computer.Computer.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 19}, "lmc.computer.integer_opcode": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.integer_opcode.IntegerOpcode": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 11}, "lmc.computer.loader": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.loader.Loader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.loader.Loader.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.computer.loader.Loader.load_into_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 34}, "lmc.computer.memory_image": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.computer.memory_image.MemoryImage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "lmc.computer.memory_image.MemoryImage.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "lmc.computer.memory_image.MemoryImage.append": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "lmc.hardware.accumulator": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.accumulator.Accumulator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "lmc.hardware.accumulator.Accumulator.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.accumulator.Accumulator.get_value": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.accumulator.Accumulator.set_value": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.inp_buffer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.inp_buffer.InpBuffer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 24}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 20}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "lmc.hardware.instruction": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 59}, "lmc.hardware.instruction.Id.ADD": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.SUB": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.STA": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.LDA": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.BRA": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.BRZ": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.BRP": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.INP": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.OUT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.HLT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.DAT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Id.from_mnemonic": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 31}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 24}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 24}, "lmc.hardware.instruction.InstructionBuilder": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.instruction.InstructionBuilder.build": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 267, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Instruction": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.instruction.Instruction.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "lmc.hardware.instruction.ADD": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "lmc.hardware.instruction.ADD.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.ADD.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.ADD.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.ADD.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.SUB": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 6}, "lmc.hardware.instruction.SUB.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.SUB.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.SUB.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.SUB.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.STA": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "lmc.hardware.instruction.STA.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.STA.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.STA.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.STA.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.LDA": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "lmc.hardware.instruction.LDA.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.LDA.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.LDA.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.LDA.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRA": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "lmc.hardware.instruction.BRA.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRA.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRA.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRA.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRZ": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "lmc.hardware.instruction.BRZ.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRZ.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRZ.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRZ.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRP": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 16}, "lmc.hardware.instruction.BRP.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRP.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRP.get_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.BRP.set_address": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.instruction.INP": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 15}, "lmc.hardware.instruction.INP.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.instruction.INP.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.OUT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 15}, "lmc.hardware.instruction.OUT.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.instruction.OUT.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.HLT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 11}, "lmc.hardware.instruction.HLT.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.instruction.HLT.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.instruction.DAT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 18}, "lmc.hardware.instruction.DAT.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "lmc.hardware.instruction.DAT.get_code": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.hardware.memory": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.memory.Memory": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "lmc.hardware.memory.Memory.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.memory.Memory.get_value": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "lmc.hardware.memory.Memory.set_value": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "lmc.hardware.out_buffer": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.out_buffer.OutBuffer": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 56}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "lmc.hardware.processor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "lmc.hardware.processor.Processor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.run_program": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 35}, "lmc.hardware.processor.Processor.process_instruction": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 28}, "lmc.hardware.processor.Processor.do_add": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "lmc.hardware.processor.Processor.do_sub": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "lmc.hardware.processor.Processor.do_sta": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "lmc.hardware.processor.Processor.do_lda": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "lmc.hardware.processor.Processor.do_bra": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.do_brz": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.do_brp": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.do_inp": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "lmc.hardware.processor.Processor.do_out": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.get_program_counter": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.get_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.get_accumulator": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.get_input_buffer": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.processor.Processor.get_output_buffer": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.program_counter": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.hardware.program_counter.ProgramCounter": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.io": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.executable_program": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 57}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 25}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 15}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 12}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 6}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program_file": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 33}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 31}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 11}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 13}, "lmc.io.file.program_file": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.program_file.ProgramFile": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.program_file.ProgramFile.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "lmc.io.file.program_file.ProgramFile.exists": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.program_file.ProgramFile.is_empty": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 156, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program_file": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 21}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"qualname": 2, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application.test_error_fatal": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application.test_error_fatal.TestComputer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "lmc.test.application.test_error_warn": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application.test_error_warn.TestErrorWarn": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"qualname": 8, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "lmc.test.assembler": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_label": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_label.TestLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "lmc.test.assembler.test_label.TestLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 19}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 24}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"qualname": 7, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 21}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 17}, "lmc.test.assembler.test_pass_one": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_one.TestPassOne": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"qualname": 11, "fullname": 17, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_two": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.assembler.test_symbol_table": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 12}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 12}, "lmc.test.computer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"qualname": 12, "fullname": 20, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"qualname": 6, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"qualname": 4, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"qualname": 6, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"qualname": 6, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"qualname": 7, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "lmc.test.computer.test_integer_opcode": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 12}, "lmc.test.computer.test_loader": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_loader.TestLoader": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_loader.TestLoader.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"qualname": 11, "fullname": 17, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.conftest": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.conftest.fixture_processor": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 17}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 58}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 60}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 60}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 82}, "lmc.test.hardware.test_accumulator": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"qualname": 10, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"qualname": 12, "fullname": 17, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "lmc.test.hardware.test_input_buffer": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "lmc.test.hardware.test_instruction": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 20}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"qualname": 8, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"qualname": 8, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "lmc.test.hardware.test_memory": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_memory.TestMemory": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"qualname": 9, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 8}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"qualname": 8, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 10}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"qualname": 8, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 13}, "lmc.test.hardware.test_output_buffer": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"qualname": 10, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"qualname": 10, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"qualname": 12, "fullname": 17, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"qualname": 12, "fullname": 17, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"qualname": 11, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"qualname": 11, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs": {"qualname": 0, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"qualname": 1, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"qualname": 3, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"qualname": 5, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.hardware.test_program_counter": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"qualname": 7, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"qualname": 11, "fullname": 20, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"qualname": 11, "fullname": 20, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"qualname": 0, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"qualname": 10, "fullname": 20, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"qualname": 10, "fullname": 20, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"qualname": 7, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"qualname": 7, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"qualname": 9, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"qualname": 10, "fullname": 19, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"qualname": 9, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"qualname": 9, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"qualname": 10, "fullname": 19, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"qualname": 12, "fullname": 21, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"qualname": 9, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"qualname": 4, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"qualname": 7, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"qualname": 9, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file": {"qualname": 0, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"qualname": 6, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 16}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 35}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"qualname": 6, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"qualname": 8, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"qualname": 8, "fullname": 18, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"qualname": 6, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"qualname": 6, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"qualname": 5, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"qualname": 5, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"qualname": 4, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions": {"qualname": 0, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"qualname": 1, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"qualname": 3, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"qualname": 4, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"qualname": 5, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"qualname": 5, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"qualname": 5, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file": {"qualname": 0, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"qualname": 6, "fullname": 16, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.io.file.test_program_file": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.test_program_file.TestProgram": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"qualname": 6, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.capture_stdout": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.capture_stdout.CaptureStdout": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "lmc.test.util.empty_test_file": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.empty_test_file.EmptyTestFile": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util.temp_file": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.get_filename": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.delete": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.writeln": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.appendln": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "lmc.test.util.temp_file.TempFile.read": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "lmc.test.util.test_data_file": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.test_data_file.TestDataFile": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "lmc.test.util.test_data_opcodes": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}}, "length": 495, "save": true}, "index": {"qualname": {"root": {"1": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}}, "df": 2}, "2": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}}, "df": 2}, "3": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}}, "df": 2}, "4": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 2}, "docs": {"lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}}, "df": 82, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}}, "df": 20, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}}, "df": 13}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}}, "df": 8, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 12}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}}, "df": 82, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 7, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 5}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.instruction.Instruction": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 37, "s": {"docs": {"lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.instruction.InstructionBuilder": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 9}, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 17}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 24, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 13}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}}, "df": 11, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 4, "s": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 2}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}}, "df": 10, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 15}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 6, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}}, "df": 4, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 1, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}}, "df": 3}}, "f": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 3}}, "a": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 9, "s": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 1, "r": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.accumulator.Accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 8}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}}, "df": 10, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}}, "df": 14}}}}}}, "n": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}}, "df": 6, "d": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 7}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.label.Label": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}}, "df": 15}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.loader.Loader": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 5, "r": {"docs": {"lmc.assembler.parser.Parser": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 27, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}}, "df": 5}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.program_file.ProgramFile": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 24}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}}, "df": 66, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}}, "df": 3}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}}, "df": 8, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 108, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 14, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.computer.test_loader.TestLoader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.test_program_file.TestProgram": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 5}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}}, "df": 7, "s": {"docs": {"lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.test_memory.TestMemory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}}, "df": 8}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 5}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 6}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 7}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 4}, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}, "e": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 10}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}}, "df": 3, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 3, "r": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.temp_file.TempFile.delete": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 22, "s": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 5}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}}, "df": 8}, "z": {"docs": {"lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}}, "df": 8}, "p": {"docs": {"lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}}, "df": 8}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 5}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}}, "df": 20}, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}, "fullname": {"root": {"1": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}}, "df": 2}, "2": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}}, "df": 2}, "3": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}}, "df": 2}, "4": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 2}, "docs": {"lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}}, "df": 82, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {"lmc": {"tf": 1}, "lmc.application": {"tf": 1}, "lmc.application.error_fatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.application.error_warn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.assembler": {"tf": 1}, "lmc.assembler.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.label": {"tf": 1}, "lmc.assembler.label.Label": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.assembler.parser": {"tf": 1}, "lmc.assembler.parser.Parser": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.assembler.pass_one": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two": {"tf": 1}, "lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.assembler.symbol_table": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.integer_opcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader": {"tf": 1}, "lmc.computer.loader.Loader": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.hardware.instruction.Instruction": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.hardware.program_counter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.io": {"tf": 1}, "lmc.io.file": {"tf": 1}, "lmc.io.file.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.program_file": {"tf": 1}, "lmc.io.file.program_file.ProgramFile": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test": {"tf": 1}, "lmc.test.application": {"tf": 1}, "lmc.test.application.test_error_fatal": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler": {"tf": 1}, "lmc.test.assembler.test_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.assembler.test_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.computer.test_integer_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_loader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.computer.test_memory_image": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware": {"tf": 1}, "lmc.test.hardware.conftest": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_accumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.hardware.test_program_counter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io": {"tf": 1}, "lmc.test.io.file": {"tf": 1}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}, "lmc.test.io.file.test_program_file": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util": {"tf": 1}, "lmc.test.util.capture_stdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}, "lmc.test.util.empty_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.temp_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}, "lmc.test.util.test_data_file": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}, "lmc.test.util.test_data_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 495}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.label": {"tf": 1}, "lmc.assembler.label.Label": {"tf": 1.4142135623730951}, "lmc.assembler.label.Label.__init__": {"tf": 1.4142135623730951}, "lmc.assembler.label.Label.is_label": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.test.assembler.test_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}}, "df": 19}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.loader": {"tf": 1}, "lmc.computer.loader.Loader": {"tf": 1.4142135623730951}, "lmc.computer.loader.Loader.__init__": {"tf": 1.4142135623730951}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 9}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application": {"tf": 1}, "lmc.application.error_fatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.application.error_warn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application": {"tf": 1}, "lmc.test.application.test_error_fatal": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 26}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 1, "r": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler": {"tf": 1.4142135623730951}, "lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 1.7320508075688772}, "lmc.assembler.label": {"tf": 1}, "lmc.assembler.label.Label": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.assembler.parser": {"tf": 1}, "lmc.assembler.parser.Parser": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.assembler.pass_one": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two": {"tf": 1}, "lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.assembler.symbol_table": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.test.assembler": {"tf": 1}, "lmc.test.assembler.test_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.assembler.test_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 66}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator": {"tf": 1.4142135623730951}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1.4142135623730951}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1.4142135623730951}}, "df": 12}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}}, "df": 10, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}}, "df": 14}}}}}}, "n": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}}, "df": 6, "d": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1.4142135623730951}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.application.error_warn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1.4142135623730951}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_fatal": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}}, "df": 41, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}}, "df": 13}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1.7320508075688772}}, "df": 67, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}}, "df": 8, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_computer_with_example_programs": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1.4142135623730951}}, "df": 20}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util.empty_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 14, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.application.error_fatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1.4142135623730951}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1.4142135623730951}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_fatal": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1.4142135623730951}}, "df": 14}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.io.file": {"tf": 1}, "lmc.io.file.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.program_file": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.io.file": {"tf": 1}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1.4142135623730951}, "lmc.test.util.empty_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.temp_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}, "lmc.test.util.test_data_file": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1.4142135623730951}}, "df": 171, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 13}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1}, "lmc.assembler.label.Label.__init__": {"tf": 1}, "lmc.assembler.parser.Parser.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.computer.computer.Computer.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}}, "df": 82, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"lmc.hardware.inp_buffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 12, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_input_buffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 11}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.computer.integer_opcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.computer.test_integer_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}}, "df": 11, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.instruction": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.hardware.instruction.Instruction": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.hardware.test_instruction": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 146, "s": {"docs": {"lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 9}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.instruction.InstructionBuilder": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 9}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.test.computer.test_memory_image": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 17}}}}, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 17}, "o": {"docs": {"lmc.io": {"tf": 1}, "lmc.io.file": {"tf": 1}, "lmc.io.file.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.program_file": {"tf": 1}, "lmc.io.file.program_file.ProgramFile": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test.io": {"tf": 1}, "lmc.test.io.file": {"tf": 1}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}, "lmc.test.io.file.test_program_file": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 134}, "t": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}}, "df": 11, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 4, "s": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 2}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_warn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1.4142135623730951}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1.4142135623730951}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}}, "df": 26, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 15}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2}, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 1, "e": {"docs": {"lmc.assembler.pass_one": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.test.assembler.test_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}}, "df": 13}}, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}}, "df": 11, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1.4142135623730951}}, "df": 9}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.out_buffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 12, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 9}}}}}, "f": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 8}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 7}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 5, "r": {"docs": {"lmc.assembler.parser": {"tf": 1}, "lmc.assembler.parser.Parser": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.__init__": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1.4142135623730951}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 22}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.pass_one": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two": {"tf": 1}, "lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.test.assembler.test_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}}, "df": 21, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.program_counter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.io.file.executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.program_file": {"tf": 1}, "lmc.io.file.program_file.ProgramFile": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram.source_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_program_counter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 135, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}}, "df": 5}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.program_file.ProgramFile": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"lmc.test.computer.test_computer_with_example_programs": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 16}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.hardware.processor": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_add": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_out": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 46}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}}, "df": 30}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}}, "df": 66, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.symbol_table": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1.4142135623730951}}, "df": 11, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.io.file.source_pprogram": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1.4142135623730951}}, "df": 61, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}}, "df": 3}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}}, "df": 4}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}}, "df": 8, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.symbol_table": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable": {"tf": 1}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1.4142135623730951}}, "df": 11}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.pass_two": {"tf": 1}, "lmc.assembler.pass_two.PassTwo": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.test.assembler.test_pass_two": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 13}}, "o": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.test": {"tf": 1}, "lmc.test.application": {"tf": 1}, "lmc.test.application.test_error_fatal": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_warn": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1.7320508075688772}, "lmc.test.assembler": {"tf": 1}, "lmc.test.assembler.test_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_one": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1.7320508075688772}, "lmc.test.computer": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1.7320508075688772}, "lmc.test.computer.test_integer_opcode": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader.TestLoader": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image": {"tf": 1.4142135623730951}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1.4142135623730951}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1.7320508075688772}, "lmc.test.hardware": {"tf": 1}, "lmc.test.hardware.conftest": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_accumulator": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1.7320508075688772}, "lmc.test.io": {"tf": 1}, "lmc.test.io.file": {"tf": 1}, "lmc.test.io.file.executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1.7320508075688772}, "lmc.test.io.file.test_program_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1.4142135623730951}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1.7320508075688772}, "lmc.test.util": {"tf": 1}, "lmc.test.util.capture_stdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}, "lmc.test.util.empty_test_file": {"tf": 1.4142135623730951}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1.4142135623730951}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1.4142135623730951}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1.4142135623730951}, "lmc.test.util.temp_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}, "lmc.test.util.test_data_file": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_opcodes": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1.4142135623730951}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1.4142135623730951}}, "df": 249, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.application.test_error_fatal.TestComputer": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 14, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.computer.test_loader.TestLoader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.test_program_file.TestProgram": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 5}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}}, "df": 7, "s": {"docs": {"lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}}, "df": 6}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 3}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.test_memory.TestMemory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}}, "df": 8}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 5}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}}, "df": 6}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.util.temp_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 11, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 7}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}}, "df": 4}, "n": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}, "e": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 10}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.hardware.memory": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory.get_value": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory.set_value": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.computer.test_memory_image": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}}, "df": 32, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}}, "df": 3, "s": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}}, "df": 8, "a": {"docs": {"lmc.test.util.test_data_file": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}, "lmc.test.util.test_data_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 3, "r": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.temp_file.TempFile.delete": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer": {"tf": 1}, "lmc.computer.computer": {"tf": 1.4142135623730951}, "lmc.computer.computer.Computer": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.__init__": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.get_processor": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.run": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader": {"tf": 1}, "lmc.computer.loader.Loader": {"tf": 1}, "lmc.computer.loader.Loader.__init__": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.test.computer": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1.4142135623730951}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_loader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.computer.test_memory_image": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}}, "df": 54}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.hardware.conftest": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}}, "df": 11}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.program_counter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.test.hardware.test_program_counter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 12}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.util.capture_stdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.hardware.accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.hardware.instruction.Instruction": {"tf": 1}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.INP.__init__": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.memory.Memory.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.hardware.program_counter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.test.hardware": {"tf": 1}, "lmc.test.hardware.conftest": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_accumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.hardware.test_program_counter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 186}}}}}}, "s": {"docs": {"lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}}, "df": 20}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.computer.test_computer_for_file_handling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 7}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}}, "df": 4}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}}, "df": 22, "s": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}}, "df": 5}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.inp_buffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.out_buffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}}, "df": 29}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}}, "df": 8}, "z": {"docs": {"lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}}, "df": 8}, "p": {"docs": {"lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}}, "df": 8}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.util": {"tf": 1}, "lmc.test.util.capture_stdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}, "lmc.test.util.empty_test_file": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.temp_file": {"tf": 1}, "lmc.test.util.temp_file.TempFile": {"tf": 1}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}, "lmc.test.util.test_data_file": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}, "lmc.test.util.test_data_opcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1}}, "df": 27}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 1}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"1": {"0": {"docs": {"lmc.hardware.instruction.Id.HLT": {"tf": 1}}, "df": 1}, "1": {"docs": {"lmc.hardware.instruction.Id.DAT": {"tf": 1}}, "df": 1}, "docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}}, "df": 1}, "2": {"docs": {"lmc.hardware.instruction.Id.SUB": {"tf": 1}}, "df": 1}, "3": {"docs": {"lmc.hardware.instruction.Id.STA": {"tf": 1}}, "df": 1}, "4": {"docs": {"lmc.hardware.instruction.Id.LDA": {"tf": 1}}, "df": 1}, "5": {"docs": {"lmc.hardware.instruction.Id.BRA": {"tf": 1}}, "df": 1}, "6": {"docs": {"lmc.hardware.instruction.Id.BRZ": {"tf": 1}}, "df": 1}, "7": {"docs": {"lmc.hardware.instruction.Id.BRP": {"tf": 1}}, "df": 1}, "8": {"docs": {"lmc.hardware.instruction.Id.INP": {"tf": 1}}, "df": 1}, "9": {"docs": {"lmc.hardware.instruction.Id.OUT": {"tf": 1}}, "df": 1}, "docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.SUB": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.STA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.LDA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.BRA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.BRP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.INP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.OUT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.HLT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.DAT": {"tf": 1.4142135623730951}}, "df": 11, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}}, "df": 11}, "d": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.LDA": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}}, "df": 11}, "n": {"docs": {}, "df": 0, "p": {"docs": {"lmc.hardware.instruction.Id.INP": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.ADD": {"tf": 1}, "lmc.hardware.instruction.Id.SUB": {"tf": 1}, "lmc.hardware.instruction.Id.STA": {"tf": 1}, "lmc.hardware.instruction.Id.LDA": {"tf": 1}, "lmc.hardware.instruction.Id.BRA": {"tf": 1}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1}, "lmc.hardware.instruction.Id.BRP": {"tf": 1}, "lmc.hardware.instruction.Id.INP": {"tf": 1}, "lmc.hardware.instruction.Id.OUT": {"tf": 1}, "lmc.hardware.instruction.Id.HLT": {"tf": 1}, "lmc.hardware.instruction.Id.DAT": {"tf": 1}}, "df": 11}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"lmc.hardware.instruction.Id.SUB": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.STA": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.Id.BRA": {"tf": 1}}, "df": 1}, "z": {"docs": {"lmc.hardware.instruction.Id.BRZ": {"tf": 1}}, "df": 1}, "p": {"docs": {"lmc.hardware.instruction.Id.BRP": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.OUT": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.HLT": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.DAT": {"tf": 1}}, "df": 1}}}}}, "signature": {"root": {"0": {"docs": {"lmc.hardware.instruction.DAT.__init__": {"tf": 1}}, "df": 1}, "1": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}}, "df": 1}, "2": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}}, "df": 1}, "3": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}}, "df": 1}, "4": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 1}, "docs": {"lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 2}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 3.7416573867739413}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 4.358898943540674}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 3.7416573867739413}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 3.7416573867739413}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 2}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 3.7416573867739413}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 3.7416573867739413}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 2}, "lmc.assembler.assembler.Assembler.run": {"tf": 3.7416573867739413}, "lmc.assembler.label.Label.__init__": {"tf": 2}, "lmc.assembler.label.Label.is_label": {"tf": 3.1622776601683795}, "lmc.assembler.parser.Parser.__init__": {"tf": 2}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 3.1622776601683795}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 3.1622776601683795}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 3.7416573867739413}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 3.7416573867739413}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 3.7416573867739413}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 3.7416573867739413}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 2}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 3.7416573867739413}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 5.656854249492381}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 4.898979485566356}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 4.242640687119285}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 2}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 8.660254037844387}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 2}, "lmc.computer.computer.Computer.__init__": {"tf": 2}, "lmc.computer.computer.Computer.get_processor": {"tf": 3.1622776601683795}, "lmc.computer.computer.Computer.run": {"tf": 3.7416573867739413}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 2}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 5.656854249492381}, "lmc.computer.loader.Loader.__init__": {"tf": 2}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 6.928203230275509}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 2}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 2.6457513110645907}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 4.242640687119285}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 2}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 3.4641016151377544}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 4.242640687119285}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 3.7416573867739413}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 3.1622776601683795}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 5.744562646538029}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 5.744562646538029}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 5.744562646538029}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 2}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 14.696938456699069}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 4.898979485566356}, "lmc.hardware.instruction.ADD.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.ADD.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.ADD.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.ADD.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.SUB.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.SUB.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.SUB.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.SUB.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.STA.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.STA.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.STA.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.STA.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.LDA.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.LDA.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.LDA.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.LDA.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.BRA.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRA.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRA.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRA.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.BRP.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRP.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRP.get_address": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.BRP.set_address": {"tf": 4.242640687119285}, "lmc.hardware.instruction.INP.__init__": {"tf": 2}, "lmc.hardware.instruction.INP.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.OUT.__init__": {"tf": 2}, "lmc.hardware.instruction.OUT.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.HLT.__init__": {"tf": 2}, "lmc.hardware.instruction.HLT.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.DAT.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.DAT.get_code": {"tf": 3.4641016151377544}, "lmc.hardware.memory.Memory.__init__": {"tf": 2}, "lmc.hardware.memory.Memory.get_value": {"tf": 4.47213595499958}, "lmc.hardware.memory.Memory.set_value": {"tf": 5.0990195135927845}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 3.4641016151377544}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 3.7416573867739413}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 4.242640687119285}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 3.4641016151377544}, "lmc.hardware.processor.Processor.__init__": {"tf": 4.898979485566356}, "lmc.hardware.processor.Processor.run_program": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_add": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_sub": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_sta": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_lda": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_bra": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_brz": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_brp": {"tf": 3.7416573867739413}, "lmc.hardware.processor.Processor.do_inp": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.do_out": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.get_memory": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 3.1622776601683795}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 3.1622776601683795}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 2}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 3.1622776601683795}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 3.1622776601683795}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 3.7416573867739413}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 2}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 4.47213595499958}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 2.8284271247461903}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 2}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 3}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 4.123105625617661}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 6.324555320336759}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 3.1622776601683795}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 3.1622776601683795}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 5.656854249492381}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 3.4641016151377544}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 5.744562646538029}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 6.48074069840786}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 8.246211251235321}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 3.4641016151377544}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 3.1622776601683795}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 3.1622776601683795}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 2}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 4.242640687119285}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 3.4641016151377544}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 2.8284271247461903}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 3.4641016151377544}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 2.8284271247461903}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 2.8284271247461903}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 3.4641016151377544}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 2}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 2.6457513110645907}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 3.1622776601683795}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 4.123105625617661}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 10.954451150103322}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 3.4641016151377544}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 2}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 2}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 3.1622776601683795}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 3.1622776601683795}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 2}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 4.242640687119285}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 2}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 5.0990195135927845}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 2}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 5.5677643628300215}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 2}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 5.5677643628300215}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 2}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 5.0990195135927845}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 2}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 3.1622776601683795}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 2}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 3.1622776601683795}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 3.7416573867739413}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 3.1622776601683795}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 2}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 3.1622776601683795}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 3.7416573867739413}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 2}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 3.1622776601683795}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 2}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 3.1622776601683795}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 3.7416573867739413}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 3.7416573867739413}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 2}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 4.242640687119285}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 2}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 4.123105625617661}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 3.7416573867739413}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 2}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 3.1622776601683795}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 3.1622776601683795}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 3.1622776601683795}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 3.1622776601683795}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 3.1622776601683795}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 2.6457513110645907}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 2}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 2}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 2}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 5.0990195135927845}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 2}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 6.4031242374328485}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 2}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 2}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 2}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 2}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 2}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 3.7416573867739413}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 2}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 5.744562646538029}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 5.744562646538029}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 3.7416573867739413}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 4.123105625617661}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 4.58257569495584}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 4.58257569495584}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 4.58257569495584}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 4.58257569495584}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 4.58257569495584}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 3.1622776601683795}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 3.7416573867739413}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 2}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 2}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 2}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 3.1622776601683795}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 3.1622776601683795}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 2}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 3.1622776601683795}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 2}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 3.7416573867739413}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 2.8284271247461903}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 3.1622776601683795}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 3.1622776601683795}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 2}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 3.4641016151377544}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 3.1622776601683795}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 4.242640687119285}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 4.242640687119285}, "lmc.test.util.temp_file.TempFile.read": {"tf": 3.4641016151377544}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 2}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 3.1622776601683795}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 3.1622776601683795}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 2}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 2.6457513110645907}}, "df": 322, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}}, "df": 8, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 19, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 2}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 5, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 2.23606797749979}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 23}, "a": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.computer.Computer.get_processor": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.hardware.processor.Processor.do_out": {"tf": 1}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1}}, "df": 216}}, "t": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1.4142135623730951}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 3}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.4142135623730951}}, "df": 12, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "c": {"docs": {"lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}}, "df": 18}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 2}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}}, "df": 22, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1}}, "df": 8}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 38}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1}}, "df": 7}}}, "o": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}}, "df": 13}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.get_code": {"tf": 1}, "lmc.hardware.instruction.STA.get_address": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.instruction.INP.get_code": {"tf": 1}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory.set_value": {"tf": 1.4142135623730951}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 41, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 3.605551275463989}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 2.23606797749979}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 2.23606797749979}}, "df": 21}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.hardware.instruction.DAT.__init__": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 2}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1}}, "df": 9}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1.4142135623730951}}, "df": 5}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1}}, "df": 9}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.4142135623730951}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 28}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}}, "df": 19}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 2}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1.4142135623730951}}, "df": 4, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1}}, "df": 13, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 8}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 8}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.instruction.ADD.__init__": {"tf": 1}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1}, "lmc.hardware.instruction.STA.__init__": {"tf": 1}, "lmc.hardware.instruction.STA.set_address": {"tf": 1}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1}, "lmc.hardware.memory.Memory.get_value": {"tf": 1}, "lmc.hardware.memory.Memory.set_value": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1.7320508075688772}}, "df": 24}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.processor.Processor.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {"lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.processor.Processor.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1}}, "df": 7, "s": {"docs": {"lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.hardware.processor.Processor.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 3.4641016151377544}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 10}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}, "z": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}, "p": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1}}, "df": 8}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1}}, "df": 11}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1.4142135623730951}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}}, "df": 11}}}}}}}}}}, "o": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 2}, "1": {"0": {"0": {"docs": {"lmc.hardware.memory.Memory": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 3}, "3": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}}, "df": 2}, "docs": {"lmc": {"tf": 1.7320508075688772}, "lmc.application": {"tf": 1.4142135623730951}, "lmc.application.error_fatal": {"tf": 1.7320508075688772}, "lmc.application.error_fatal.ErrorFatal": {"tf": 2.23606797749979}, "lmc.application.error_fatal.ErrorFatal.__init__": {"tf": 1.7320508075688772}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_error": {"tf": 1.7320508075688772}, "lmc.application.error_fatal.ErrorFatal.exit_fatal_errors": {"tf": 1.7320508075688772}, "lmc.application.error_fatal.ErrorFatal.exit_file_not_found": {"tf": 1.7320508075688772}, "lmc.application.error_fatal.ErrorFatal.exit_file_is_empty": {"tf": 1.7320508075688772}, "lmc.application.error_warn": {"tf": 1.7320508075688772}, "lmc.application.error_warn.ErrorWarn": {"tf": 1.7320508075688772}, "lmc.application.error_warn.ErrorWarn.__init__": {"tf": 1.7320508075688772}, "lmc.application.error_warn.ErrorWarn.warn_error": {"tf": 1.7320508075688772}, "lmc.application.error_warn.ErrorWarn.warn_input_not_integer_or_float": {"tf": 1.7320508075688772}, "lmc.assembler": {"tf": 1.4142135623730951}, "lmc.assembler.assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler": {"tf": 4.58257569495584}, "lmc.assembler.assembler.Assembler.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 2.449489742783178}, "lmc.assembler.label": {"tf": 1.7320508075688772}, "lmc.assembler.label.Label": {"tf": 1.7320508075688772}, "lmc.assembler.label.Label.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.label.Label.is_label": {"tf": 1.4142135623730951}, "lmc.assembler.parser": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.get_symbol_table": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.get_source_instructions": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.parse_source_instruction": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.parse_mnemonic_no_label": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.parse_mnemonic_with_label": {"tf": 1.7320508075688772}, "lmc.assembler.parser.Parser.parse_mnemonic_dat": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne": {"tf": 1.4142135623730951}, "lmc.assembler.pass_one.PassOne.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne.decode_source_program_file": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne.get_source_program": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne.get_symbol_table": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne.decode_source_line": {"tf": 1.7320508075688772}, "lmc.assembler.pass_two": {"tf": 1.7320508075688772}, "lmc.assembler.pass_two.PassTwo": {"tf": 1.7320508075688772}, "lmc.assembler.pass_two.PassTwo.__init__": {"tf": 1.7320508075688772}, "lmc.assembler.pass_two.PassTwo.assemble_source_instructions": {"tf": 1.7320508075688772}, "lmc.assembler.symbol_table": {"tf": 1.7320508075688772}, "lmc.assembler.symbol_table.SymbolTable": {"tf": 1.7320508075688772}, "lmc.assembler.symbol_table.SymbolTable.__init__": {"tf": 1.7320508075688772}, "lmc.computer": {"tf": 1.7320508075688772}, "lmc.computer.computer": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.__init__": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.get_processor": {"tf": 1.7320508075688772}, "lmc.computer.computer.Computer.run": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode.IntegerOpcode": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode.IntegerOpcode.__init__": {"tf": 1.7320508075688772}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1.4142135623730951}, "lmc.computer.loader": {"tf": 1.7320508075688772}, "lmc.computer.loader.Loader": {"tf": 1.7320508075688772}, "lmc.computer.loader.Loader.__init__": {"tf": 1.7320508075688772}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 2.449489742783178}, "lmc.computer.memory_image": {"tf": 1.7320508075688772}, "lmc.computer.memory_image.MemoryImage": {"tf": 2.449489742783178}, "lmc.computer.memory_image.MemoryImage.__init__": {"tf": 1.7320508075688772}, "lmc.computer.memory_image.MemoryImage.get_max_size": {"tf": 1.7320508075688772}, "lmc.computer.memory_image.MemoryImage.append": {"tf": 1.7320508075688772}, "lmc.hardware": {"tf": 2.449489742783178}, "lmc.hardware.accumulator": {"tf": 1.7320508075688772}, "lmc.hardware.accumulator.Accumulator": {"tf": 1.4142135623730951}, "lmc.hardware.accumulator.Accumulator.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.accumulator.Accumulator.get_value": {"tf": 1.7320508075688772}, "lmc.hardware.accumulator.Accumulator.set_value": {"tf": 1.7320508075688772}, "lmc.hardware.inp_buffer": {"tf": 1.7320508075688772}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 2}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1.4142135623730951}, "lmc.hardware.instruction": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id": {"tf": 3.872983346207417}, "lmc.hardware.instruction.Id.ADD": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.SUB": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.STA": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.LDA": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.BRA": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.BRZ": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.BRP": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.INP": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.OUT": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.HLT": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.DAT": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 2}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 2}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 2}, "lmc.hardware.instruction.InstructionBuilder": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.InstructionBuilder.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.InstructionBuilder.build": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Instruction": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Instruction.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.ADD": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.ADD.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.ADD.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.ADD.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.ADD.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.SUB": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.SUB.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.SUB.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.SUB.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.SUB.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.STA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.STA.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.STA.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.STA.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.STA.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.LDA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.LDA.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.LDA.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.LDA.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.LDA.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRA": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.BRA.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRA.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRA.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRA.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRZ": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.BRZ.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRZ.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRZ.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRZ.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.BRP.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRP.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRP.get_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.BRP.set_address": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.INP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.INP.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.INP.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.OUT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.OUT.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.OUT.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.HLT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.HLT.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.HLT.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.DAT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.DAT.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.DAT.get_code": {"tf": 1.7320508075688772}, "lmc.hardware.memory": {"tf": 1.7320508075688772}, "lmc.hardware.memory.Memory": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.memory.Memory.get_value": {"tf": 1.7320508075688772}, "lmc.hardware.memory.Memory.set_value": {"tf": 1.7320508075688772}, "lmc.hardware.out_buffer": {"tf": 1.7320508075688772}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 2.449489742783178}, "lmc.hardware.out_buffer.OutBuffer.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.out_buffer.OutBuffer.set_file_to_write_to": {"tf": 1.7320508075688772}, "lmc.hardware.out_buffer.OutBuffer.write_value": {"tf": 1.7320508075688772}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1.4142135623730951}, "lmc.hardware.processor": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.run_program": {"tf": 2.23606797749979}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 2}, "lmc.hardware.processor.Processor.do_add": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_bra": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.do_brz": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.do_brp": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_out": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.get_program_counter": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.get_memory": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.get_accumulator": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.get_input_buffer": {"tf": 1.7320508075688772}, "lmc.hardware.processor.Processor.get_output_buffer": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1.4142135623730951}, "lmc.hardware.program_counter.ProgramCounter.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter.ProgramCounter.get_value": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter.ProgramCounter.debug_get_value": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter.ProgramCounter.set_value": {"tf": 1.7320508075688772}, "lmc.io": {"tf": 1.7320508075688772}, "lmc.io.file": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 2.449489742783178}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.set_index": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem.get_index": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 2}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction.get_opcode": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError.get_message": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.is_empty": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_memory_image": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 2.449489742783178}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.get_executable_program": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.append": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.io.file.program_file": {"tf": 1.7320508075688772}, "lmc.io.file.program_file.ProgramFile": {"tf": 1.7320508075688772}, "lmc.io.file.program_file.ProgramFile.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.program_file.ProgramFile.exists": {"tf": 1.7320508075688772}, "lmc.io.file.program_file.ProgramFile.is_empty": {"tf": 1.7320508075688772}, "lmc.io.file.program_file.ProgramFile.size_in_bytes": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceItem": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.set_line_number": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceItem.get_line_number": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionNoLabel.get_instruction": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_instruction": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionWithLabel.get_label": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionDat.get_instruction": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_instruction.SourceInstructionError.get_message": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_max_size": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram.has_errors": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram.get_list_errors": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram.append": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program_file": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.__init__": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile.read": {"tf": 1.7320508075688772}, "lmc.test": {"tf": 1.7320508075688772}, "lmc.test.application": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer.__init__": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_warn.TestErrorWarn": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_warn.TestErrorWarn.__init__": {"tf": 1.7320508075688772}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1.4142135623730951}, "lmc.test.assembler": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_label.TestLabel.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_label.TestLabel.test_is_label": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_one.TestPassOne.test_stage_pass_one_can_decode_a_source_program_file": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two.TestPassTwo.fixture_pass_one": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_pass_two.TestPassTwo.test_encode_bad_source_instruction": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.__init__": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.fixture_symbol_table": {"tf": 1.7320508075688772}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1.4142135623730951}, "lmc.test.computer": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.__init__": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.this_tests_directory": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_not_found_error_when_file_to_run_not_exist": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_empty": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_for_file_handling.TestComputerProgramFileHandling.test_file_has_bad_opcodes": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.__init__": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.this_tests_directory": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_add_numbers": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_count_down": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_print_self": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_example_program_square_a_number": {"tf": 1.7320508075688772}, "lmc.test.computer.test_computer_with_example_programs.TestComputerWithExamplePrograms.test_sub_two_numbers": {"tf": 1.7320508075688772}, "lmc.test.computer.test_integer_opcode": {"tf": 1.7320508075688772}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode": {"tf": 1.7320508075688772}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.__init__": {"tf": 1.7320508075688772}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1.4142135623730951}, "lmc.test.computer.test_loader": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader.TestLoader": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader.TestLoader.__init__": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader.TestLoader.fixture_test_loader_opcodes": {"tf": 1.7320508075688772}, "lmc.test.computer.test_loader.TestLoader.test_read_into_memory": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.__init__": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_get_max_size": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_empty_binary_program_gives_error_on_trying_to_access": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_gives_the_correct_size": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_appending_more_than_max_size_gives_exception": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_setitem_and_getitem_methods": {"tf": 1.7320508075688772}, "lmc.test.computer.test_memory_image.TestMemoryImage.test_python_str_method": {"tf": 1.7320508075688772}, "lmc.test.hardware": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 3.1622776601683795}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 3.1622776601683795}, "lmc.test.hardware.test_accumulator": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer.TestInpBuffer": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 2}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 2}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 2}, "lmc.test.hardware.test_instruction": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoLabel.test_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionWithLabel.test_instruction_with_label": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory.fixture_memory": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_output_buffer": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_empty_gives_error": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_trying_to_get_value_when_it_has_one": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_single_value_to_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_output_buffer.TestOutBuffer.test_writing_a_two_values_to_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_add": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sub": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_sta": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_lda": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_bra": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brz": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_brp": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_use_a_file": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_inp_when_input_buffer_set_to_have_stdin_redirected": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_out_when_output_buffer_automatically_collects_value_set": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor.TestProcessorProcessInstructions.test_instruction_that_does_not_require_processing_such_as_dat": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_processor_with_example_programs.TestProcessorWithExamplePrograms.test_run_example_4": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter.TestProgramCounter": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter.TestProgramCounter.__init__": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_initial_value": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_program_counter.TestProgramCounter.test_set_value": {"tf": 1.7320508075688772}, "lmc.test.io": {"tf": 1.7320508075688772}, "lmc.test.io.file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_opcode": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_its_not_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction.TestExecutableInstruction.test_executable_instruction_getting_the_index_when_it_is_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_no_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_instruction_error.TestExecutableInstructionError.test_executable_instruction_error_that_has_an_index_set": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_no_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.fixture_executable_program_with_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_length": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_no_errors_check_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_lengths": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_has_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_executable_program_has_an_error_check_get_the_expected_values": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_max_size": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_appending_maximum_number_of_opcodes": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program.TestExecutableProgram.test_get_memory_image_when_program_is_empty": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 2.449489742783178}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_write_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_python_get_method": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_getting_as_a_string": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_an_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.test_when_executable_program_has_multiple_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_no_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_with_label": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_dat": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_instruction_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instruction.TestSourceInstruction.test_source_item": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_max_size": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_no_errors": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_has_error": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_instructions.TestSourceInstructions.test_instruction_max_append": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.create_test_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.clean_test_file_if_exists": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_read_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.source_program.test_source_program_file.TestSourceProgram.test_str": {"tf": 1.7320508075688772}, "lmc.test.io.file.test_program_file": {"tf": 1.7320508075688772}, "lmc.test.io.file.test_program_file.TestProgram": {"tf": 1.7320508075688772}, "lmc.test.io.file.test_program_file.TestProgram.__init__": {"tf": 1.7320508075688772}, "lmc.test.io.file.test_program_file.TestProgram.test_exists_and_is_empty": {"tf": 1.7320508075688772}, "lmc.test.util": {"tf": 1.7320508075688772}, "lmc.test.util.capture_stdout": {"tf": 1.7320508075688772}, "lmc.test.util.capture_stdout.CaptureStdout": {"tf": 1.7320508075688772}, "lmc.test.util.capture_stdout.CaptureStdout.__init__": {"tf": 1.7320508075688772}, "lmc.test.util.capture_stdout.CaptureStdout.redirect": {"tf": 1.7320508075688772}, "lmc.test.util.empty_test_file": {"tf": 1.7320508075688772}, "lmc.test.util.empty_test_file.EmptyTestFile": {"tf": 1.7320508075688772}, "lmc.test.util.empty_test_file.EmptyTestFile.__init__": {"tf": 1.7320508075688772}, "lmc.test.util.empty_test_file.EmptyTestFile.create": {"tf": 1.7320508075688772}, "lmc.test.util.empty_test_file.EmptyTestFile.remove_if_exist": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.__init__": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.get_filename": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.delete": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.writeln": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.appendln": {"tf": 1.7320508075688772}, "lmc.test.util.temp_file.TempFile.read": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file.TestDataFile": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file.TestDataFile.__init__": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file_if_exists": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_file.TestDataFile.clean_test_file": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_opcodes": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_opcodes.TestDataOpcodes": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.__init__": {"tf": 1.7320508075688772}, "lmc.test.util.test_data_opcodes.TestDataOpcodes.opcodes_subtract": {"tf": 1.7320508075688772}}, "df": 495, "a": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 2}, "lmc.assembler.label.Label.is_label": {"tf": 1.4142135623730951}, "lmc.assembler.pass_one.PassOne": {"tf": 1.4142135623730951}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.7320508075688772}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 58, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 1.4142135623730951}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 2}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.7320508075688772}}, "df": 30, "d": {"docs": {"lmc.application": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 19}, "y": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}}, "df": 3}}, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}}, "df": 8}}, "y": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 2.23606797749979}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 20}}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.DAT": {"tf": 1}}, "df": 1, "d": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 2.23606797749979}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.ADD": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 9, "s": {"docs": {"lmc.application": {"tf": 1}, "lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 4, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.instruction.HLT": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 18}}}}, "e": {"docs": {"lmc.computer": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}}, "df": 4, "d": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}}, "df": 4}, "s": {"docs": {"lmc.computer": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.computer.Computer": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.application": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {"lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 4}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}}, "df": 10}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 13}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"lmc.hardware": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.accumulator.Accumulator": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 17}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler": {"tf": 1.4142135623730951}, "lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 1.4142135623730951}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}}, "df": 24, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.assembler.pass_one.PassOne": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1.7320508075688772}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 2.23606797749979}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 23}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 10, "s": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}}, "df": 1}, "s": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1.7320508075688772}, "lmc.application.error_warn.ErrorWarn": {"tf": 1.4142135623730951}, "lmc.assembler.assembler.Assembler": {"tf": 2.449489742783178}, "lmc.assembler.assembler.Assembler.run": {"tf": 1.4142135623730951}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1.4142135623730951}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.7320508075688772}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 2.449489742783178}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1.7320508075688772}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1.7320508075688772}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.OUT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 2.449489742783178}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 2.23606797749979}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1.7320508075688772}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 3}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 3}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 3}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 3.605551275463989}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}}, "df": 80, "n": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}}, "df": 9}, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 4}}, "m": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1.4142135623730951}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.OUT": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 2}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 2}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 39, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 4}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}}, "df": 42, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 7, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"6": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1.4142135623730951}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 6, "s": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.hardware.instruction.DAT": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {"lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 23}, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 5, "s": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1.4142135623730951}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1.4142135623730951}, "lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 30}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}}, "df": 3, "s": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": null}, "lmc.hardware.out_buffer.OutBuffer": {"tf": null}}, "df": 2}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 29, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.accumulator.Accumulator": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.hardware.instruction.HLT": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.memory.Memory": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 5, "s": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1.4142135623730951}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 25}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.hardware": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 3}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 4, "s": {"docs": {"lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"lmc.hardware.instruction.DAT": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 5, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.application.error_fatal.ErrorFatal": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 3, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 2}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1.4142135623730951}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}}, "df": 16}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}, "d": {"docs": {"lmc.assembler.assembler.Assembler.run": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.SUB": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware.instruction.Id": {"tf": 2.23606797749979}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 7, "d": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.processor.Processor.run_program": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}}, "df": 1, "r": {"docs": {"lmc.application.error_warn.ErrorWarn": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 12}, "d": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.Id": {"tf": 2.23606797749979}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}}, "df": 3}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 2.8284271247461903}, "lmc.assembler.assembler.Assembler.run": {"tf": 2}, "lmc.assembler.pass_one.PassOne": {"tf": 1.4142135623730951}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1.4142135623730951}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.7320508075688772}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1.4142135623730951}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 28}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.4142135623730951}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 8}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.hardware.processor.Processor": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 1, "r": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 4}, "s": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"lmc.test.assembler.test_pass_one.TestPassOne": {"tf": 1}, "lmc.test.assembler.test_pass_two.TestPassTwo": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {"lmc.test.application.test_error_fatal.TestComputer.test_fatal_error": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_errors": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_is_empty": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_the_symbol_table_as_a_string": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_get_memory_using_python_str_method": {"tf": 1}}, "df": 10, "n": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler": {"tf": 1}, "lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 1}, "lmc.assembler.pass_one.PassOne": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1.7320508075688772}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 15}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.7320508075688772}, "lmc.assembler.assembler.Assembler.run": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.parse_external_opcode": {"tf": 1}}, "df": 18, "l": {"docs": {}, "df": 0, "y": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.ADD": {"tf": 1}, "lmc.hardware.instruction.SUB": {"tf": 1}, "lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.HLT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstructionError": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.append": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1.4142135623730951}}, "df": 28, "s": {"docs": {"lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.processor.Processor": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.hardware.program_counter.ProgramCounter": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}}, "df": 13}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 11, "s": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.memory.Memory": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.7320508075688772}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "m": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1}}, "s": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1}}, "f": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 14}, "s": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.hardware.memory.Memory": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1.7320508075688772}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1.4142135623730951}, "lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 2}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}}, "df": 23, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 2.6457513110645907}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_label.TestLabel": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.hardware": {"tf": 1}, "lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_list_errors": {"tf": 1}, "lmc.io.file.source_pprogram.source_program.SourceProgram": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.io.file.source_pprogram.source_program_file.SourceProgramFile": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError.test_mnemonic_has_error": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}}, "df": 11}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 8}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.computer.computer.Computer": {"tf": 1}, "lmc.computer.computer.Computer.run": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}}, "df": 6, "s": {"docs": {"lmc.computer": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.instruction.STA": {"tf": 1}, "lmc.hardware.instruction.LDA": {"tf": 1}, "lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasError": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.instruction.HLT": {"tf": 1}}, "df": 1}}, "s": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.hardware.accumulator.Accumulator": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1.4142135623730951}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableItem": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_error": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_label.TestLabel": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 16, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"lmc.computer": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.hardware": {"tf": 1.4142135623730951}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_known_instruction_id": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_building_instruction_from_unknown_instruction_id": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"lmc.hardware.inp_buffer.InpBuffer": {"tf": 1.4142135623730951}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "d": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "k": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"lmc.hardware.instruction.BRA": {"tf": 1}, "lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.hardware.instruction.BRP": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 6}}}}, "z": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1}, "p": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.computer.loader.Loader.load_into_memory": {"tf": 1}, "lmc.hardware.processor.Processor.run_program": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"lmc.assembler.assembler.Assembler": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1}}, "df": 6}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.computer.integer_opcode.IntegerOpcode.convert_to_instruction": {"tf": 1}, "lmc.test.computer.test_integer_opcode.TestIntegerOpcode.test_binary_opcode_decoder": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.io.file.executable_program.executable_program.ExecutableProgram.has_errors": {"tf": 1}}, "df": 1, "s": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasLabel.test_mnemonic_that_has_a_label": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 3}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"lmc.hardware.program_counter.ProgramCounter": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.write": {"tf": 1}, "lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile.read": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"lmc.test.assembler.test_parser.TestParserMnemonicIsDat": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel.test_mnemonic_no_label": {"tf": 1}, "lmc.test.hardware.test_instruction.TestInstructionNoAddressSet.test_instruction_add": {"tf": 1}}, "df": 6, "t": {"docs": {"lmc.assembler.label.Label.is_label": {"tf": 1}, "lmc.hardware.processor.Processor.process_instruction": {"tf": 1}, "lmc.test.application.test_error_fatal.TestComputer.test_fatal_error_file_not_found": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicHasNoLabel": {"tf": 1}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.instruction.Id": {"tf": 1.4142135623730951}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_no_label": {"tf": 1}, "lmc.hardware.instruction.Id.mnemonic_has_label": {"tf": 1}}, "df": 4}}, "w": {"docs": {"lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"lmc.io.file.executable_program.executable_instruction.ExecutableInstruction": {"tf": 1}, "lmc.io.file.executable_program.executable_program.ExecutableProgram.get_max_size": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 3, "s": {"docs": {"lmc.computer.memory_image.MemoryImage": {"tf": 1}, "lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_subtract_program_opcodes": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"lmc.hardware": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.hardware.instruction.Id.from_mnemonic": {"tf": 1}, "lmc.hardware.instruction.INP": {"tf": 1}, "lmc.hardware.instruction.OUT": {"tf": 1}, "lmc.hardware.instruction.DAT": {"tf": 1.4142135623730951}, "lmc.hardware.out_buffer.OutBuffer": {"tf": 1}, "lmc.hardware.out_buffer.OutBuffer.get_value_for_test": {"tf": 1}, "lmc.hardware.processor.Processor.do_add": {"tf": 1}, "lmc.hardware.processor.Processor.do_sub": {"tf": 1}, "lmc.hardware.processor.Processor.do_sta": {"tf": 1}, "lmc.hardware.processor.Processor.do_lda": {"tf": 1}, "lmc.hardware.processor.Processor.do_inp": {"tf": 1}, "lmc.test.application.test_error_warn.TestErrorWarn.test_warn_input_not_integer_or_float": {"tf": 1.4142135623730951}, "lmc.test.assembler.test_parser.TestParserMnemonicIsDat.test_mnemonic_dat_with_without_value": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable.test_get_values_from_symbol_table": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_1": {"tf": 2}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_2": {"tf": 2}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 2}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_4": {"tf": 2.449489742783178}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_accumulator_initial_value": {"tf": 1}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_integer_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_accumulator.TestAccumulator.test_set_and_get_of_accumulator_to_a_floating_point_value": {"tf": 1.4142135623730951}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_single_value_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_uninitialized_memory_locations_are_set_to_zero": {"tf": 1}, "lmc.test.hardware.test_memory.TestMemory.test_setting_and_getting_memory_location_value": {"tf": 1}}, "df": 25, "s": {"docs": {"lmc.hardware.accumulator.Accumulator": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.set_file_to_read_from": {"tf": 1}, "lmc.hardware.inp_buffer.InpBuffer.get_value": {"tf": 1}, "lmc.test.assembler.test_symbol_table.TestSymbolTable": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_two_values_when_using_temp_file": {"tf": 1}, "lmc.test.hardware.test_input_buffer.TestInpBuffer.test_get_multi_values_when_using_temp_file": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"lmc.io.file.executable_program.executable_program_file.ExecutableProgramFile": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"lmc.hardware.inp_buffer.InpBuffer.__init__": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"lmc.hardware.instruction.BRZ": {"tf": 1}, "lmc.test.hardware.conftest.fixture_processor_with_example_program_3": {"tf": 1}}, "df": 2, "s": {"docs": {"lmc.hardware.memory.Memory": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"lmc.hardware.processor.Processor.process_instruction": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"lmc.test.io.file.executable_program.test_executable_program_file.TestExecutableProgramFile.fixture_test_executable_filename": {"tf": 1}}, "df": 1}}}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();